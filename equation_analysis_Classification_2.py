# -*- coding: utf-8 -*-
"""
Created on Wed Dec 13 05:21:28 2023

@author: Nikola Andelic
"""
import re
import pandas as pd 
import numpy as np 
import matplotlib.pyplot as plt 
import seaborn as sns 
from collections import Counter
import warnings 
warnings.filterwarnings('ignore')

data_train = pd.read_csv("train data.csv")
data_test = pd.read_csv("test data.csv")
print(data_train.columns)
print(data_test.columns)
data_final = pd.concat([data_train, data_test], axis=0).reset_index()
data_final.pop('index')
print(data_final)
del (data_train, data_test)

print(data_final.info())
print(data_final.isnull().sum().sum())


# Creation of Fault_detection Columns
classes = data_final['class'].copy()
print(classes.to_list())
fault_detection = []
for i in range(len(classes)):
    #print(classes[i])
    if not classes[i] == 0:
        fault_detection.append(1)
    else:
        fault_detection.append(0)

data_final_2 = pd.concat([data_final, pd.DataFrame(np.array(fault_detection), columns = ['fault_det'])], axis = 1)
print(data_final_2)
y_raw = data_final_2.pop('class')

data_final_2.pop('fault_det')
print(data_final_2)

y = pd.get_dummies(y_raw, dtype='float', prefix="class")

print(y)
y_real_2 = y.pop('class_2')


# data_final_class_2 = pd.concat([data_final_2, y_real_2], axis = 1)
# print(data_final_class_2)
# data_final_class_2.to_csv("Fault_classification_original_class_2.csv", index = False)
# del data_final_class_2









## data_final_2.to_csv("PF_Classification_original_class_0.csv",
##                     index=False)
def log2(x):
    with np.errstate(divide = "ignore", invalid = "ignore"):
          return np.where(np.abs(x) > 0.001, np.log2(np.abs(x)),0.)
def log10(x):
    with np.errstate(divide = "ignore", invalid = "ignore"):
          return np.where(np.abs(x) > 0.001, np.log10(np.abs(x)),0.)
import scipy.special as sp 
def CubeRoot(x):
    return sp.cbrt(x)
def log(x1):
      with np.errstate(divide = "ignore", invalid = "ignore"):
          return np.where(np.abs(x1) > 0.001, np.log(np.abs(x1)),0.)
def sqrt(x1):
    return np.sqrt(np.abs(x1))
def div(x1,x2):
    with np.errstate(divide = "ignore", invalid = "ignore"):
        return np.where(np.abs(x2) > 0.001, np.divide(x1,x2), 1.) 
#############################################
# Original dataset 
# ADASYN, BorderlineSMOTE, SMOTE, SVMSMOTE 
#############################################
Original_all =[######################################################
# Original + ADASYN CLASS 2
######################################################
'CubeRoot(log2(np.add(div(np.abs(X26), div(log2(log2(CubeRoot(log(np.sin(np.sin(np.abs(np.multiply(log10(np.abs(div(X9, X6))), sqrt(np.add(sqrt(np.abs(np.cos(np.add(np.sin(X5), np.cos(X21))))), np.subtract(np.cos(np.multiply(div(X25, X12), np.sin(min(X28, X12)))), log(sqrt(np.add(CubeRoot(max(np.abs(X3), np.multiply(np.subtract(X25, X7), np.tan(X8)))), np.tan(min(log(log10(X27)), log10(CubeRoot(np.subtract(np.tan(X14), log(X25)))))))))))))))))))), sqrt(min(div(np.subtract(X1, X15), X24), X28)))), div(np.multiply(X28, X2), np.subtract(sqrt(np.subtract(X16, X5)), np.abs(np.abs(log10(np.subtract(np.multiply(min(X17, X29), np.multiply(np.multiply(X20, X24), np.subtract(div(X8, X5), X11))), np.add(min(np.tan(log10(log2(np.subtract(np.multiply(np.tan(X6), X12), div(np.add(log(max(min(np.add(X15, X6), np.sin(np.cos(max(np.tan(np.subtract(np.abs(X26), sqrt(X2))), np.multiply(CubeRoot(np.subtract(X28, X18)), np.multiply(sqrt(X20), np.tan(X0))))))), X25)), min(X24, X19)), np.add(max(X11, X7), sqrt(X18))))))), np.abs(sqrt(X8))), np.add(np.multiply(X16, X27), np.cos(X12))))))))))))',
'np.subtract(log(min(div(div(X9, X28), np.add(np.add(np.subtract(np.subtract(np.tan(X19), X22), X23), div(X25, log2(np.sin(np.cos(X28))))), np.multiply(-58.811, div(np.multiply(X8, np.add(sqrt(max(min(np.add(sqrt(-633.522), sqrt(X21)), np.multiply(np.multiply(X21, X20), np.add(min(X28, X23), np.cos(X27)))), sqrt(X3))), max(X3, sqrt(np.subtract(div(np.add(X29, X2), min(X29, X26)), log2(X29)))))), X29)))), X29)), np.multiply(X28, np.subtract(max(np.subtract(div(np.add(15.296, np.cos(log2(np.cos(X26)))), max(div(X29, X26), div(div(X14, max(X27, np.add(X15, X17))), X9))), X17), div(np.cos(np.multiply(log2(X15), X27)), div(log(np.subtract(X3, X14)), sqrt(np.subtract(X12, X19))))), div(np.cos(np.multiply(sqrt(X5), X27)), div(CubeRoot(X15), sqrt(np.subtract(X12, X19)))))))',
'div(log2(np.abs(min(np.multiply(log2(X22), log(div(CubeRoot(X28), np.abs(np.add(X23, X9))))), np.cos(-588.009)))), np.add(np.sin(div(X9, X19)), div(sqrt(np.sin(log10(div(np.tan(X26), np.abs(min(X9, X29)))))), log2(np.add(np.sin(X27), np.cos(min(np.add(X10, X3), sqrt(max(max(np.cos(np.subtract(X16, X18)), log(np.subtract(X10, X0))), np.abs(log10(min(X1, X27))))))))))))',
'log(div(np.multiply(85.085, CubeRoot(max(X29, np.abs(X28)))), np.abs(np.subtract(CubeRoot(sqrt(X28)), div(np.abs(np.multiply(np.multiply(np.abs(np.add(X5, sqrt(X21))), X28), np.add(np.add(X21, 90.118), np.add(X20, np.add(np.add(np.abs(log10(np.sin(log(log(X5))))), sqrt(max(X6, X21))), log2(-466.607)))))), X29)))))',
'np.multiply(log2(sqrt(np.tan(np.add(CubeRoot(sqrt(X28)), np.subtract(sqrt(sqrt(X12)), X29))))), min(X21, np.add(div(X25, div(X26, X5)), np.multiply(np.subtract(np.add(X5, X13), max(min(np.tan(log2(np.cos(log10(X13)))), X18), np.multiply(X29, X6))), X19))))',



######################################################
# Original + BorderlineSMOTE CLASS 2 
######################################################
'np.subtract(CubeRoot(sqrt(np.multiply(min(X28, np.abs(X23)), np.multiply(X23, np.multiply(sqrt(np.add(X9, X21)), np.subtract(np.add(X21, X17), log(X3))))))), np.abs(log(np.subtract(log(CubeRoot(sqrt(np.add(np.sin(X29), div(X19, log2(X28)))))), np.subtract(log(CubeRoot(sqrt(np.add(log10(sqrt(CubeRoot(np.cos(log10(X21))))), div(X19, log2(X28)))))), np.multiply(X29, np.multiply(np.multiply(X19, np.add(np.abs(np.sin(X23)), np.multiply(X24, X16))), np.multiply(X21, X9))))))))',
'np.add(min(log2(X15), np.subtract(log10(log2(div(X2, X1))), np.subtract(np.add(np.multiply(X29, X18), log(X20)), np.subtract(min(X12, X4), log2(np.abs(X16)))))), div(np.sin(sqrt(X11)), np.add(log2(X29), div(np.subtract(X1, X15), log2(-571.448)))))',
'log2(CubeRoot(min(div(np.multiply(X28, max(-448.901, np.multiply(max(np.multiply(np.multiply(X20, X19), np.multiply(np.multiply(X20, X5), X20)), X8), np.multiply(X24, X17)))), div(div(log2(X25), X28), np.abs(X29))), div(CubeRoot(np.tan(np.multiply(np.tan(X12), min(-0.331, CubeRoot(X24))))), np.multiply(min(X20, max(X24, np.abs(X5))), np.multiply(np.add(X20, X23), log2(X20)))))))',
'log2(np.multiply(log10(np.tan(min(X27, np.sin(np.add(np.add(log2(127.529), X29), X29))))), div(np.multiply(X26, max(div(np.multiply(X21, 42.019), min(div(X19, log10(np.cos(sqrt(X29)))), np.subtract(X6, X11))), sqrt(div(np.subtract(CubeRoot(X11), X14), np.add(np.subtract(np.abs(max(np.multiply(X26, X23), np.abs(div(log(X3), sqrt(X8))))), -652.097), X22))))), min(max(X3, X27), X0))))',
'min(np.multiply(div(np.subtract(sqrt(np.abs(np.add(min(X4, X9), sqrt(X16)))), np.add(sqrt(np.abs(log10(X21))), CubeRoot(div(max(X27, X25), CubeRoot(X28))))), CubeRoot(div(log(div(np.cos(log(X21)), np.abs(X29))), log(X29)))), X25), np.multiply(np.add(np.subtract(sqrt(np.multiply(X22, X28)), np.add(X20, max(CubeRoot(np.add(X17, div(X21, sqrt(log(np.tan(np.tan(np.tan(max(CubeRoot(np.add(X18, X20)), np.tan(X9)))))))))), X28))), X21), np.abs(X20)))',



######################################################
# Original + SMOTE CLASS 2 
######################################################
'np.multiply(np.cos(X4), np.add(log2(np.abs(sqrt(CubeRoot(np.multiply(max(log2(np.cos(sqrt(log10(np.abs(min(np.cos(div(X3, X9)), log10(max(X1, X5)))))))), np.abs(np.abs(np.multiply(max(div(np.multiply(np.add(X20, X5), div(X18, np.abs(np.abs(log(np.tan(X2)))))), np.multiply(log10(X14), X12)), np.multiply(X15, X6)), np.subtract(sqrt(np.cos(log2(X12))), np.abs(np.abs(np.multiply(max(div(np.multiply(X13, X17), np.multiply(X13, X12)), np.sin(max(div(np.subtract(np.add(np.add(X19, X13), np.sin(X8)), log10(X21)), max(CubeRoot(X26), log2(X13))), np.cos(log10(CubeRoot(np.tan(X15))))))), np.subtract(max(X11, X14), np.sin(X6)))))))))), min(X27, X28)))))), np.add(np.add(log2(np.abs(sqrt(CubeRoot(np.multiply(max(log2(np.sin(np.add(X20, X25))), np.abs(np.abs(np.multiply(max(div(np.multiply(np.add(X20, X5), div(X18, min(X7, log(X16)))), np.multiply(log10(X14), X12)), np.multiply(X15, X6)), np.subtract(sqrt(np.cos(log2(X12))), np.abs(np.abs(np.multiply(max(div(np.multiply(X13, X17), np.multiply(X13, X12)), np.sin(max(div(np.subtract(np.add(np.add(X19, X13), np.sin(X8)), log10(X21)), max(CubeRoot(X26), log2(X13))), np.cos(log10(CubeRoot(np.tan(X15))))))), np.subtract(max(X11, X14), np.abs(np.abs(np.multiply(max(div(np.multiply(X13, X17), np.multiply(X13, X12)), np.sin(max(div(np.subtract(np.add(np.add(X19, X13), np.sin(X8)), log10(X21)), max(CubeRoot(X26), log2(X13))), np.cos(log10(CubeRoot(np.tan(X15))))))), np.subtract(max(X11, X14), np.sin(X25)))))))))))))), min(X27, X28)))))), np.add(log2(np.abs(sqrt(CubeRoot(np.multiply(np.multiply(np.tan(X12), np.add(X21, X20)), min(np.abs(np.cos(np.abs(np.cos(X16)))), X28)))))), np.add(log10(div(sqrt(np.subtract(X12, X28)), np.tan(np.abs(X17)))), np.multiply(log10(np.add(X1, X17)), np.add(log2(np.abs(sqrt(CubeRoot(np.multiply(np.multiply(np.tan(X12), np.add(X21, X20)), min(X27, X28)))))), np.add(log10(div(sqrt(np.subtract(X12, X28)), np.tan(np.abs(X17)))), np.multiply(log10(np.add(X1, X17)), max(log2(div(np.multiply(np.subtract(X14, X0), X25), div(CubeRoot(X24), CubeRoot(CubeRoot(np.sin(X29)))))), log2(X27))))))))), np.add(log10(div(sqrt(np.subtract(X12, X28)), np.tan(np.abs(X17)))), np.multiply(log10(np.add(X1, X17)), np.add(log2(np.abs(sqrt(CubeRoot(np.multiply(np.multiply(np.tan(X12), np.add(X21, X20)), min(X27, X28)))))), np.add(log10(div(sqrt(np.subtract(X12, X28)), np.tan(X22))), np.multiply(log10(X23), max(log2(div(np.multiply(np.subtract(X14, X0), X25), div(CubeRoot(X24), CubeRoot(CubeRoot(np.sin(X29)))))), log2(X27))))))))))',
'min(np.abs(np.add(max(X20, np.cos(X22)), log(log10(np.multiply(np.cos(log10(np.abs(log2(log10(np.add(X18, X9)))))), div(np.abs(np.subtract(np.abs(X4), max(X20, X9))), log10(X29))))))), np.multiply(np.add(sqrt(np.cos(min(max(X29, X17), np.add(div(X14, -517.328), np.cos(X2))))), X17), min(np.add(np.cos(X19), np.subtract(max(div(min(X17, X21), np.tan(CubeRoot(np.sin(np.sin(np.add(min(np.add(X26, X10), np.tan(X29)), log10(X17))))))), log10(X0)), CubeRoot(np.add(X20, X27)))), CubeRoot(np.subtract(log10(np.cos(np.subtract(X23, X27))), np.subtract(np.add(np.multiply(X28, X18), div(max(X24, np.multiply(76.601, X25)), X29)), log2(np.cos(X2))))))))',
'np.add(div(log2(np.multiply(min(X24, X19), X28)), log2(sqrt(np.subtract(log2(log(CubeRoot(log2(np.tan(sqrt(np.add(CubeRoot(CubeRoot(CubeRoot(np.abs(CubeRoot(CubeRoot(np.tan(np.tan(log10(np.add(X28, X29)))))))))), np.subtract(X8, X8)))))))), np.abs(X7))))), log2(sqrt(sqrt(np.add(CubeRoot(np.abs(log2(log(CubeRoot(log2(np.tan(np.sin(np.add(X28, X29))))))))), div(X12, np.multiply(np.add(np.multiply(X13, X22), np.cos(np.tan(np.add(X24, X10)))), X24)))))))',
'np.add(np.multiply(log2(max(div(div(max(np.multiply(X18, X10), np.cos(X8)), sqrt(log10(X28))), sqrt(max(X22, X23))), log10(np.cos(max(log(X9), max(log2(sqrt(sqrt(log10(X28)))), np.tan(X5))))))), div(np.subtract(np.subtract(X4, X20), X26), X29)), np.add(np.multiply(log2(max(div(div(max(np.multiply(X18, X10), np.cos(X8)), sqrt(log10(X28))), sqrt(max(X22, X23))), log10(np.cos(max(log(X9), max(CubeRoot(X17), np.tan(X5))))))), div(np.subtract(np.subtract(X4, X20), X26), X29)), np.cos(CubeRoot(np.multiply(log(min(X6, X15)), np.subtract(X9, sqrt(252.507)))))))',
'np.subtract(np.subtract(log2(np.subtract(CubeRoot(np.add(np.multiply(X18, X28), CubeRoot(np.add(np.multiply(X15, X28), np.sin(np.abs(CubeRoot(log2(log(315.740))))))))), div(np.subtract(X12, X21), np.abs(log10(X28))))), np.multiply(log10(log(max(sqrt(np.subtract(X0, X23)), CubeRoot(min(X9, sqrt(log(log2(log2(np.subtract(X1, X8)))))))))), np.cos(np.tan(X12)))), sqrt(div(sqrt(min(np.abs(log10(X20)), np.multiply(sqrt(X19), np.sin(X29)))), div(np.abs(sqrt(X16)), X21))))',


######################################################
# Original + SVMSMOTE CLASS 2
######################################################
'log2(min(min(np.subtract(np.multiply(np.abs(div(div(X12, X29), np.abs(min(np.abs(X3), np.abs(min(CubeRoot(X21), div(sqrt(div(log10(np.cos(np.cos(log10(max(81.440, X28))))), log2(574.431))), np.add(X25, log2(np.abs(X18)))))))))), X28), log10(np.abs(div(sqrt(np.sin(div(X12, X29))), np.abs(min(np.cos(log10(log10(X18))), div(np.subtract(X0, min(X2, X4)), np.abs(np.multiply(log2(X28), sqrt(np.multiply(np.multiply(CubeRoot(X15), X28), sqrt(X19)))))))))))), np.multiply(X26, X22)), np.abs(div(div(X1, X18), np.abs(min(np.abs(X14), min(X17, X1)))))))',
'log2(np.multiply(np.subtract(np.abs(log(np.multiply(sqrt(X28), X20))), log10(max(np.multiply(np.multiply(X19, X29), np.multiply(sqrt(np.add(div(X21, log(X23)), div(div(log(X13), CubeRoot(log2(np.multiply(X25, X7)))), max(log2(np.abs(X15)), log2(X16))))), X19)), np.sin(min(X27, np.add(np.sin(X8), log10(X18))))))), X26))',
'np.add(np.add(np.add(log2(CubeRoot(X4)), np.abs(log2(np.tan(div(X28, np.add(div(np.multiply(np.multiply(X20, X29), np.subtract(X1, np.sin(sqrt(X22)))), X27), max(np.tan(log10(X5)), log(X18)))))))), np.abs(log2(np.tan(div(X28, np.add(div(np.multiply(np.multiply(X20, X29), CubeRoot(np.subtract(log2(X4), CubeRoot(X16)))), X27), np.subtract(np.abs(X18), 114.193))))))), np.add(np.add(np.add(log2(div(-44.228, X19)), np.abs(log2(np.tan(div(X28, np.add(div(np.multiply(np.multiply(X20, X29), np.subtract(X1, np.sin(sqrt(X22)))), X27), max(np.tan(max(X9, X5)), log(X18)))))))), np.abs(log2(np.tan(div(X28, np.add(div(np.multiply(np.multiply(X20, X29), np.subtract(X1, log2(X2))), X27), np.subtract(np.cos(X20), 114.193))))))), np.cos(np.subtract(np.add(div(np.add(X0, X14), np.subtract(X7, X16)), np.sin(X29)), sqrt(log(np.add(X15, X23)))))))',
'np.multiply(np.multiply(X24, np.multiply(X20, X14)), np.subtract(np.multiply(np.subtract(np.add(X2, X17), X12), np.subtract(X1, X8)), X8))',
'np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.abs(X28), min(min(div(X6, X0), div(np.subtract(np.cos(CubeRoot(X28)), sqrt(div(np.multiply(np.multiply(X22, X17), log10(X5)), np.sin(CubeRoot(X7))))), np.tan(X28))), div(div(max(CubeRoot(X9), X17), np.cos(log2(log2(log10(255.818))))), np.tan(X28)))), np.multiply(np.multiply(X18, X20), CubeRoot(X29))), X10), max(X3, sqrt(X25))), X28)'


]



StandardScaler_raw = [  ###############################################################################################################
# Standard Scaler + ADASYN CLASS 2 
###############################################################################################################
'CubeRoot(np.subtract(np.subtract(CubeRoot(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(np.sin(CubeRoot(np.subtract(np.sin(CubeRoot(np.subtract(CubeRoot(np.subtract(np.sin(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(np.sin(CubeRoot(np.subtract(np.sin(CubeRoot(np.subtract(CubeRoot(np.subtract(np.sin(np.sin(np.sin(CubeRoot(np.subtract(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(np.sin(CubeRoot(np.subtract(div(X28, X29), X29))), X29)), X29)), X29), X29))))), X29)), X29))), X29))), X29)), X29)), CubeRoot(np.abs(np.cos(X6))))), X29)), X29)), np.sin(min(X17, min(np.multiply(X9, X16), CubeRoot(CubeRoot(X17)))))))), X29)), np.cos(CubeRoot(log2(sqrt(X15)))))), X29))), X29)), X29))), X29))), X29)), X29)), X29)), X29)), np.sin(np.abs(X6))))), X29)), np.cos(np.subtract(X18, np.subtract(X18, CubeRoot(X28))))))), X29)), X29)), np.sin(np.sin(np.abs(min(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(np.sin(CubeRoot(np.subtract(np.sin(CubeRoot(np.subtract(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(np.sin(CubeRoot(np.subtract(np.sin(CubeRoot(np.subtract(CubeRoot(np.subtract(np.sin(np.sin(np.sin(CubeRoot(np.subtract(np.subtract(CubeRoot(np.subtract(CubeRoot(np.sin(CubeRoot(np.subtract(CubeRoot(np.subtract(np.sin(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(np.sin(CubeRoot(np.subtract(np.sin(CubeRoot(np.subtract(CubeRoot(np.subtract(np.sin(np.sin(np.sin(CubeRoot(np.subtract(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(np.sin(CubeRoot(np.subtract(div(X28, X29), X29))), X29)), X29)), X29), X29))))), X29)), X29))), X29))), X29)), X29)), np.multiply(np.subtract(X23, X23), div(log10(X4), np.abs(X7))))), X29)), X29)), np.sin(min(X17, min(np.multiply(X9, X16), CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(np.sin(CubeRoot(np.subtract(np.sin(CubeRoot(np.subtract(CubeRoot(np.subtract(np.sin(np.sin(np.sin(CubeRoot(np.subtract(np.subtract(np.multiply(div(log10(np.add(sqrt(np.multiply(np.sin(sqrt(CubeRoot(X2))), np.cos(min(log10(X10), np.cos(X0))))), np.sin(log(log2(np.subtract(max(np.multiply(X4, X27), log(X20)), sqrt(np.abs(X6)))))))), np.tan(np.tan(div(sqrt(np.subtract(np.sin(np.abs(np.tan(X17))), log(np.abs(X11)))), np.abs(np.cos(np.abs(max(X25, X24)))))))), np.subtract(sqrt(np.add(np.tan(div(log2(np.add(X29, X29)), log(CubeRoot(X5)))), sqrt(X21))), np.abs(X23))), X29), X29))))), X29)), X29))), X29))), X29)), X29)), CubeRoot(np.abs(CubeRoot(X25))))), X29)), X29)))))))), X29)), np.cos(CubeRoot(log2(X19))))), X29))), X29)), X29)))), X29)), X29), X29))))), X29)), X29))), X29))), X29)), X29)), CubeRoot(np.multiply(np.subtract(X2, X5), X25))), X29))), X29))), X29)), X29)), CubeRoot(np.abs(sqrt(log(X29)))))), X29)), X29)), np.cos(sqrt(np.cos(X17)))), div(min(X26, X26), np.subtract(99.028, X3))))))))), X29), np.cos(np.subtract(X18, np.subtract(X18, max(np.subtract(np.subtract(CubeRoot(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(np.sin(CubeRoot(np.subtract(np.sin(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(np.sin(CubeRoot(np.subtract(np.sin(CubeRoot(np.subtract(CubeRoot(np.subtract(np.sin(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(np.sin(CubeRoot(np.subtract(np.sin(CubeRoot(np.subtract(CubeRoot(np.subtract(np.sin(np.sin(np.sin(CubeRoot(np.subtract(np.subtract(CubeRoot(np.subtract(CubeRoot(np.sin(CubeRoot(np.subtract(CubeRoot(np.subtract(np.sin(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(np.sin(CubeRoot(np.subtract(np.sin(CubeRoot(np.subtract(CubeRoot(np.subtract(np.sin(np.sin(np.sin(CubeRoot(np.subtract(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(np.sin(CubeRoot(np.subtract(div(X28, X29), X29))), X29)), X29)), X29), X29))))), X29)), X29))), X29))), X29)), X29)), np.multiply(np.subtract(X11, X2), CubeRoot(np.add(np.abs(log2(CubeRoot(np.multiply(log2(X2), np.add(X4, X14))))), log(np.multiply(np.tan(np.abs(max(X14, X17))), log10(X22)))))))), X29)), X29)), np.sin(min(X17, min(np.multiply(X9, X16), CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(CubeRoot(np.subtract(np.sin(CubeRoot(np.subtract(min(np.add(div(log(X5), sqrt(X23)), CubeRoot(np.tan(X19))), min(np.add(np.tan(X4), max(X6, X18)), min(min(X12, X1), np.multiply(X6, X3)))), X29))), X29)), X29)), CubeRoot(np.abs(CubeRoot(X25))))), X29)), X29)))))))), X29)), np.cos(CubeRoot(log2(X19))))), X29))), X29)), X29)))), X29)), X29), X29))))), X29)), X29))), X29))), X29)), X29)), CubeRoot(np.multiply(np.subtract(X2, X5), X25)))), X29)), X29)), np.subtract(X24, X10)))), X29)), np.cos(X24))), X29))), X29)), X29))), X29))), X29)), X29)), X29)), X29)), np.sin(np.tan(np.cos(X29)))))), X29)), np.cos(sqrt(X28))))), X29)), np.cos(X2)))), X29))), X29)), X29)), np.sin(np.sin(np.tan(max(np.tan(log10(X7)), min(sqrt(log(np.sin(X6))), max(np.subtract(np.cos(log2(np.sin(max(X20, X9)))), CubeRoot(np.subtract(log2(np.multiply(np.tan(log10(X7)), np.cos(log2(X10)))), np.sin(CubeRoot(log10(min(np.abs(X6), np.sin(np.subtract(X6, X0))))))))), np.tan(298.405)))))))))), X29), log10(X26)), np.multiply(X26, X26)))))))',
# 'np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.multiply(log2(np.tan(np.multiply(np.subtract(X23, X13), log10(np.sin(log(X28)))))), X28), X29), X29), X29), X29), X28), X28), X29), X29), X28), X29), X29), X29), X28), X28), X28), sqrt(np.multiply(X28, X9))), X28), X28), X28), X28), X28), np.abs(X27)), X29), X29), X29), X28), X28), X28), X29), X29), X28), X29), X29), X29), X28), X28), X28), np.sin(X21)), X28), X28), X28), X28), X28), X28), X28), X28), X29), X29), X28), X29), X29), X29), X28), X28), X28), np.abs(X27)), X29), X29), X29), X28), X28), X28), X29), X29), X28), X29), X29), X29), X28), X28), X28), sqrt(X7)), X28), X28), X28), X28), X28), X28), X28), X28), X29), X29), X28), X29), X29), X29), X28), X28), X28), np.abs(X27)), X28), X28), X28), X28), X28), np.sin(np.tan(np.cos(np.multiply(np.sin(np.subtract(X22, X11)), sqrt(np.add(X21, X13))))))), X29), X29), X28), X28), X28), sqrt(np.multiply(X28, X9))), X28), X28), X28), X28), X28), X28), X28), X29), X29), X28), X29), X29), X29), X28), X28), X28), sqrt(np.multiply(X28, X9))), X28), X28), X28), X28), X28), np.abs(X27)), X29), X29), X29), X28), X28), X28), X29), X29), X28), X29), X29), X28), X29), X29), X29), X28), X28), X28), np.sin(X21)), X28), X28), X28), X28), X28), X28), X28), X28), X29), X29), X28), X29), X29), X29), X28), X28), X28), np.abs(X27)), X29), X29), X29), X28), X28), X28), X29), X29), X28), X29), X29), X29), X28), X28), X28), sqrt(X7)), X28), X28), X28), X28), X28), X28), X28), X28), X29), X29), X28), X29), X29), X29), X28), X28), X28), np.abs(X27)), X28), X28), X28), X28), X28), np.sin(np.tan(np.cos(np.multiply(np.sin(np.subtract(X22, X11)), sqrt(np.add(X21, X13))))))), X29), X29), X28), X28), X28), sqrt(np.multiply(X28, X9))), X28), X28), X28), X28), X28), X28), X28), X29), X29), X28), X29), X29), X29), X28), X28), X28), sqrt(np.multiply(X28, X9))), X28), X28), X28), X28), X28), np.abs(X27)), X29), X29), X29), X28), X28), X28), X29), X29), X28), X29), X29), X29), X28), X28), X28), sqrt(X7)), X28), X28), X28), X28), X28), X28), X28), X28), X29), X29), X28), X29), X29), X29), X28), X28), X28), np.abs(X27)), X29), X29), X29), X28), X28), X28), X29), X29), X28), X29), X29), X29), X28), X28), X28), sqrt(X7)), X28), X28), X28), X28), X28), X28), X28), X28), X29), X29), X28), X29), X29), X29), X28), X28), X28), np.abs(X27)), X28), X28), X28), X28), X28), np.sin(np.tan(np.cos(np.multiply(np.sin(np.subtract(X22, X11)), np.add(X15, X9)))))), X29), X29), X28), X28), X28), sqrt(np.multiply(X28, X9))), X28), X28), X28), X28), X28), np.abs(X27)), X29), X29), X29), X28), X28), X28), X29), X29), X28), X29), X29), X29), X28), X28), np.cos(min(log2(log(X14)), np.tan(np.sin(X3))))), X29), X29), X28), X28), X28), sqrt(np.multiply(X28, X9))), X28), X28), X28), X28), X28), np.abs(X27)), X29), X29), X29), X28), X28), X28), X29), X29), X28), X29), X29), X29), X28), X28), X28), sqrt(X7)), X28), X28), X28), X28), X28), X28), X28), X28), X29), X29), X28), X29), X29), X29), X28), X28), X28), np.abs(X27)), X29), X29), X29), X28), X28), X28), X29), X29), X28), X29), X29), X29), X28), X28), X28), sqrt(X7)), X28), X28), X28), X28), X28), X28), X28), X28), X29), X29), X28), X29), X29), X29), X28), X28), X28), np.abs(X27)), X28), X28), X28), X28), X28), np.sin(np.tan(np.cos(np.multiply(np.sin(np.subtract(X22, X11)), sqrt(np.add(X21, X13))))))), X29)',
'np.cos(log(np.abs(div(log2(np.cos(max(X28, max(log(log2(np.cos(log(np.abs(div(log2(np.cos(max(X28, max(log(log2(CubeRoot(sqrt(np.sin(max(X4, div(np.cos(X6), np.add(np.abs(log2(CubeRoot(np.tan(log(X25))))), log2(log2(log10(log10(X17)))))))))))), np.subtract(X13, X8))))), np.abs(np.cos(sqrt(np.add(np.tan(252.263), CubeRoot(X29))))))))))), np.subtract(X13, X8))))), np.abs(np.cos(sqrt(np.add(np.tan(252.263), CubeRoot(X29)))))))))',
'np.cos(log(np.abs(div(log2(np.cos(max(X28, max(log(log2(np.cos(log(np.abs(div(log2(np.cos(max(X28, max(log(log2(CubeRoot(sqrt(np.sin(max(X4, div(np.cos(X6), np.add(np.abs(log2(CubeRoot(np.tan(log(X25))))), log2(log2(log10(log10(X17)))))))))))), np.subtract(X13, X8))))), np.abs(np.cos(sqrt(np.add(np.tan(252.263), CubeRoot(X29))))))))))), np.subtract(X13, X8))))), np.abs(np.cos(sqrt(np.add(np.tan(252.263), CubeRoot(X29)))))))))',
'log2(log2(div(np.tan(log(X28)), max(sqrt(np.add(np.multiply(np.add(max(np.tan(np.add(CubeRoot(min(np.tan(X28), np.multiply(X24, X5))), np.cos(X4))), np.cos(min(np.abs(X26), log2(X24)))), np.subtract(np.add(np.subtract(log2(np.abs(np.multiply(X5, 530.066))), np.add(np.multiply(X29, 739.886), log(min(sqrt(np.cos(np.multiply(CubeRoot(sqrt(np.cos(X4))), np.tan(np.tan(X14))))), log10(np.abs(np.sin(np.subtract(np.tan(log2(np.abs(np.tan(CubeRoot(max(X13, X5)))))), min(np.add(log(X9), log2(X2)), np.sin(log10(X29))))))))))), 345.479), 734.384)), np.subtract(X8, X5)), np.abs(np.abs(26.863)))), div(np.subtract(np.add(np.multiply(np.multiply(X29, 739.886), CubeRoot(log10(X29))), np.sin(max(np.abs(np.abs(np.add(np.multiply(max(CubeRoot(X21), np.add(max(max(np.multiply(X3, X3), CubeRoot(X14)), np.multiply(np.sin(X13), np.abs(X26))), CubeRoot(X10))), np.multiply(np.cos(log10(np.add(X27, sqrt(X10)))), np.subtract(max(log10(np.abs(X6)), div(np.abs(X13), np.tan(X23))), log2(max(log2(X16), log10(div(np.add(X25, X5), CubeRoot(X1)))))))), min(sqrt(div(np.sin(log2(min(X22, 717.942))), np.cos(np.abs(div(X12, X9))))), min(61.955, X24))))), np.tan(np.tan(CubeRoot(np.multiply(X29, X13))))))), 734.384), X28)))))',
'div(np.add(div(np.abs(min(np.abs(X9), np.abs(X12))), np.cos(np.subtract(np.sin(X3), np.sin(min(min(np.multiply(max(np.multiply(np.add(X18, X18), div(X22, X11)), np.abs(log10(np.abs(X17)))), min(log(min(X28, X11)), np.multiply(np.cos(np.multiply(div(log(log2(np.multiply(X22, log10(X12)))), log(div(min(np.multiply(X22, log(X29)), np.cos(min(X20, X21))), log10(np.multiply(np.abs(X16), log2(X9)))))), CubeRoot(X9))), log10(log10(log10(X29)))))), np.subtract(np.cos(CubeRoot(min(max(np.multiply(X21, max(CubeRoot(log2(X21)), min(log2(X4), div(399.467, X23)))), np.tan(np.sin(div(np.tan(log10(div(np.multiply(np.abs(np.abs(np.sin(np.sin(min(X11, X19))))), np.sin(np.cos(max(X26, sqrt(np.sin(X1)))))), np.subtract(np.tan(min(X11, X26)), min(X27, X7))))), min(X14, X8))))), np.subtract(180.310, X28)))), div(CubeRoot(X6), div(np.cos(min(-65.716, X4)), np.add(X19, X14))))), log2(np.abs(np.multiply(div(np.multiply(CubeRoot(X25), max(X9, X0)), np.multiply(log2(X23), div(X10, X0))), np.cos(np.multiply(CubeRoot(X2), np.tan(X29))))))))))), np.add(np.add(np.add(np.add(CubeRoot(np.add(max(X28, X26), X27)), X29), np.add(np.add(CubeRoot(np.add(max(X28, X26), X27)), X29), np.add(X28, X12))), X29), np.add(X28, X27))), X12)',




###############################################################################################################
# Standard Scaler + Borderline SMOTE Class 2 
###############################################################################################################
'div(X28, log10(np.abs(np.sin(np.cos(np.multiply(np.subtract(X14, X13), np.add(log2(log10(np.abs(323.456))), max(log(np.abs(np.multiply(np.add(log(max(np.abs(log10(CubeRoot(X22))), min(np.tan(np.tan(min(np.sin(div(div(X6, X7), np.cos(X29))), np.subtract(log(np.cos(np.sin(np.add(X8, X14)))), np.cos(CubeRoot(X16)))))), np.abs(log2(np.cos(max(np.cos(np.multiply(X0, X8)), np.add(div(X15, X25), np.multiply(X28, X11))))))))), log2(X28)), log(log10(X12))))), min(np.add(sqrt(np.subtract(log(np.add(np.abs(log(min(log10(X18), np.cos(X27)))), np.tan(np.tan(np.subtract(X27, X18))))), X18)), sqrt(log2(log10(np.abs(323.456))))), np.tan(X1))))))))))',
'np.cos(np.add(max(div(np.sin(353.863), np.subtract(log2(log(X28)), np.abs(np.cos(log10(X28))))), log2(sqrt(np.add(sqrt(div(X13, X13)), np.abs(np.subtract(log10(np.abs(X7)), np.subtract(np.abs(log(log10(min(CubeRoot(sqrt(log(X0))), min(CubeRoot(sqrt(CubeRoot(log10(max(log10(X0), X27))))), np.tan(np.abs(X29))))))), min(np.abs(X10), log2(np.sin(log2(max(min(log(log2(np.cos(X22))), log(np.multiply(np.multiply(div(X25, X22), np.sin(div(div(np.subtract(CubeRoot(np.add(np.add(log(min(np.add(X17, X13), np.sin(min(CubeRoot(log10(div(X8, X12))), min(np.multiply(np.multiply(X28, X28), CubeRoot(X15)), np.subtract(np.cos(log2(X5)), np.add(log(np.multiply(log10(X22), np.add(X27, X22))), np.subtract(np.subtract(log2(X13), np.multiply(X8, X21)), np.tan(div(CubeRoot(X10), sqrt(X22))))))))))), np.cos(sqrt(np.cos(X14)))), log2(X26))), np.add(log2(CubeRoot(np.sin(div(X27, X21)))), np.abs(max(X11, np.abs(X5))))), log(np.tan(np.add(min(sqrt(np.abs(X12)), np.abs(sqrt(np.abs(min(np.tan(np.cos(X19)), np.sin(np.cos(X11))))))), np.abs(np.cos(sqrt(X28))))))), np.abs(log10(123.819))))), min(np.subtract(CubeRoot(X24), np.sin(X0)), sqrt(sqrt(np.sin(X27))))))), X29)))))))))))), CubeRoot(X29)))',
'log2(np.multiply(log2(max(CubeRoot(X28), np.subtract(X2, X13))), np.tan(np.cos(sqrt(np.subtract(np.subtract(np.subtract(max(X28, X1), np.cos(np.abs(log(sqrt(np.add(np.abs(np.subtract(log10(np.tan(X15)), np.multiply(np.tan(X25), log10(sqrt(X2))))), np.subtract(log2(np.abs(np.multiply(min(X22, X11), div(X23, X22)))), div(np.subtract(np.multiply(log10(div(X6, X23)), min(CubeRoot(np.multiply(64.557, np.multiply(min(np.subtract(np.subtract(X13, X14), log10(np.abs(X15))), np.tan(np.abs(log2(CubeRoot(sqrt(np.subtract(log2(X12), X4))))))), min(np.abs(np.tan(np.abs(min(log2(max(div(X4, X21), log(np.multiply(np.abs(np.cos(max(np.multiply(np.add(np.subtract(log2(np.abs(np.tan(min(np.multiply(log10(np.multiply(log10(np.cos(np.sin(X1))), np.tan(sqrt(log10(X9))))), log2(max(log(np.subtract(min(X24, X10), max(X4, X10))), np.tan(div(CubeRoot(X5), log(X3)))))), np.cos(X5))))), np.cos(CubeRoot(max(log(np.sin(log(np.subtract(log10(sqrt(np.tan(X7))), sqrt(np.multiply(log10(X24), log10(X17))))))), np.cos(np.add(sqrt(min(np.tan(np.subtract(min(X13, X22), np.multiply(X23, X25))), np.subtract(sqrt(CubeRoot(X8)), np.abs(np.multiply(X8, X15))))), CubeRoot(sqrt(log10(min(np.subtract(X29, X26), CubeRoot(X1))))))))))), np.sin(np.abs(sqrt(sqrt(np.sin(np.subtract(np.subtract(np.sin(log10(min(max(X25, X0), sqrt(X15)))), max(np.tan(CubeRoot(div(X11, X11))), min(np.add(np.multiply(451.122, X22), div(X27, 57.712)), log(np.tan(X25))))), np.abs(log(log10(np.multiply(log2(X1), log10(X8)))))))))))), log2(max(np.sin(np.multiply(log10(CubeRoot(log10(log(np.multiply(log2(log2(sqrt(X4))), np.cos(sqrt(np.add(X11, X20)))))))), np.add(CubeRoot(X15), np.add(log10(np.cos(CubeRoot(np.abs(np.multiply(np.cos(X8), np.add(X13, X13)))))), np.multiply(CubeRoot(log2(CubeRoot(np.tan(np.add(X15, X8))))), log2(log2(np.tan(np.cos(np.subtract(X17, X25)))))))))), log10(CubeRoot(X15))))), np.sin(np.add(np.abs(np.sin(sqrt(X24))), log(CubeRoot(np.subtract(CubeRoot(min(X4, X21)), np.cos(X9))))))))), np.add(X8, 249.869))))), X13)))), np.subtract(min(X13, X22), log10(X3)))))), log(np.cos(np.cos(np.subtract(log2(log(np.cos(X7))), np.add(min(np.cos(log(X5)), np.subtract(np.tan(X0), min(X28, X20))), np.cos(CubeRoot(X21))))))))), X29), max(X23, X26))))))))), min(X29, sqrt(div(min(X11, 64.557), np.multiply(X5, X27))))), np.multiply(max(np.cos(390.653), min(np.subtract(div(np.cos(X15), X4), log(X18)), np.sin(X15))), np.tan(log(X28)))))))))',
'np.sin(log(max(max(np.add(X28, X4), np.multiply(X12, X7)), min(max(min(div(max(max(log10(-5.164), X29), log(X1)), div(np.subtract(np.subtract(np.add(max(np.abs(log(sqrt(np.multiply(log(log10(X27)), max(np.add(X25, X1), np.sin(X17)))))), max(sqrt(X11), np.subtract(np.abs(log(log10(np.tan(X18)))), max(CubeRoot(np.abs(sqrt(np.tan(sqrt(np.multiply(np.add(log2(X5), log10(X2)), log10(np.subtract(X2, X11)))))))), log10(log(sqrt(X1))))))), np.cos(np.abs(X22))), log(np.multiply(X23, X15))), np.abs(np.multiply(X2, log(X6)))), sqrt(sqrt(max(log(div(CubeRoot(np.cos(np.add(X2, 434.444))), max(X4, np.cos(sqrt(X13))))), np.sin(np.tan(X13))))))), CubeRoot(CubeRoot(log(CubeRoot(np.add(min(log10(np.cos(np.subtract(X24, X29))), log10(log(np.sin(np.multiply(X10, X6))))), np.cos(np.multiply(min(np.add(X26, X5), np.cos(X23)), np.subtract(min(X28, X27), log10(X5)))))))))), min(sqrt(X4), X29)), X29))))',
'np.multiply(np.add(log2(div(div(np.subtract(X29, CubeRoot(max(X18, X7))), div(log(np.subtract(np.abs(log2(np.sin(min(log(X28), log2(377.291))))), div(np.multiply(np.sin(log10(div(X6, X18))), np.abs(log10(log(X17)))), np.abs(sqrt(sqrt(CubeRoot(log10(np.tan(np.add(np.multiply(np.cos(X7), log2(log(np.cos(max(np.cos(415.263), div(log10(log10(X3)), sqrt(np.multiply(np.abs(np.tan(div(np.multiply(max(div(np.sin(np.tan(min(np.tan(X5), max(min(X13, np.cos(np.abs(np.tan(log2(div(X25, X2)))))), CubeRoot(np.cos(np.add(np.add(CubeRoot(min(np.add(np.sin(log(np.add(np.tan(np.multiply(X23, X4)), div(np.subtract(X26, X22), sqrt(div(np.sin(X12), log10(X6))))))), log(np.tan(log10(log(np.sin(max(X29, X0))))))), np.add(div(div(np.sin(np.cos(X14)), max(X1, X28)), np.tan(np.cos(np.sin(X6)))), np.multiply(X23, np.cos(log(div(np.add(np.subtract(X5, X8), log10(log(max(X8, X1)))), log(log(X9))))))))), sqrt(np.add(X7, X28))), np.add(np.multiply(log(X19), np.cos(min(sqrt(np.abs(X14)), log10(log(X11))))), np.subtract(np.add(log10(np.subtract(max(log10(max(np.tan(log10(X20)), sqrt(max(np.multiply(sqrt(np.sin(np.subtract(log2(np.cos(min(np.cos(sqrt(X7)), log10(log(X26))))), max(np.add(np.add(div(CubeRoot(np.abs(np.sin(np.subtract(X25, X20)))), log10(np.subtract(sqrt(X18), np.tan(X8)))), np.sin(log(np.add(log10(np.subtract(X20, X20)), np.abs(np.tan(X27)))))), max(X21, X8)), np.subtract(np.abs(div(X14, X26)), log(max(div(X9, X21), np.tan(X18)))))))), min(np.tan(max(X20, log(log2(log10(CubeRoot(np.multiply(X17, X18))))))), log2(np.multiply(np.abs(np.tan(np.cos(np.multiply(X25, X26)))), np.subtract(X18, X20))))), sqrt(np.subtract(max(X26, np.tan(X29)), log10(log10(X21)))))))), CubeRoot(log10(np.add(X4, X3)))), min(log(max(np.abs(CubeRoot(min(log10(max(min(X23, X26), np.sin(X7))), min(log(np.add(X17, X19)), log10(np.multiply(X1, X12)))))), np.multiply(log10(log10(np.sin(max(X1, X9)))), max(np.sin(np.multiply(min(np.subtract(X13, X18), sqrt(X27)), np.subtract(sqrt(X19), log10(X4)))), max(div(min(min(X1, 427.897), min(X11, 382.260)), div(CubeRoot(X25), min(X7, X19))), div(np.sin(X0), np.subtract(np.add(X16, X10), np.cos(np.cos(max(X7, X5)))))))))), min(min(np.cos(log10(log2(np.cos(log10(log10(X26)))))), log2(np.add(CubeRoot(np.abs(min(X21, X10))), max(np.add(np.sin(log2(X26)), min(np.multiply(X15, X16), np.subtract(X4, X24))), min(np.cos(CubeRoot(X2)), np.tan(np.tan(X10))))))), np.add(np.add(np.subtract(CubeRoot(log10(np.add(CubeRoot(X22), log(X21)))), min(np.cos(np.tan(np.tan(X29))), min(max(log(X5), sqrt(X27)), min(np.add(X13, X13), log(X19))))), np.tan(sqrt(X14))), log2(sqrt(np.tan(sqrt(CubeRoot(CubeRoot(X7))))))))))), np.cos(log(np.abs(log10(315.727))))), log(sqrt(np.multiply(X12, X13)))))))))))), np.add(log2(max(min(X18, X27), np.sin(np.add(sqrt(np.multiply(log2(np.add(np.sin(np.subtract(log(np.add(X12, X26)), X8)), div(np.tan(np.multiply(log2(log(X1)), CubeRoot(np.add(X23, X7)))), log2(log(np.sin(log10(X23))))))), sqrt(np.tan(log(log2(max(div(np.add(X14, X29), CubeRoot(X8)), CubeRoot(div(X1, X2))))))))), np.abs(CubeRoot(np.tan(div(log10(log10(np.abs(np.add(np.subtract(X8, X4), np.cos(X28))))), np.tan(np.abs(log(np.sin(sqrt(X23))))))))))))), log10(log(X15)))), np.sin(np.multiply(sqrt(min(np.multiply(X28, X26), np.abs(sqrt(np.add(log10(X23), np.multiply(X1, X1)))))), sqrt(np.sin(np.abs(log2(X3))))))), np.add(sqrt(np.subtract(X7, X4)), np.sin(np.cos(CubeRoot(X18))))), np.cos(log(X4))))), log10(CubeRoot(X6)))))))))), np.cos(sqrt(np.subtract(X28, X15))))))))))))), min(X7, np.cos(X22)))), 141.327)), np.multiply(X29, np.add(X29, X22))), X28)',



###############################################################################################################
# Standard Scaler + SMTOE Class 2 
###############################################################################################################
'div(np.subtract(np.abs(np.tan(np.sin(log(max(X4, X28))))), CubeRoot(CubeRoot(CubeRoot(min(np.cos(X29), np.cos(sqrt(np.add(np.add(CubeRoot(CubeRoot(X29)), max(log10(log10(log(X3))), CubeRoot(log(div(211.636, np.cos(np.abs(div(max(max(log10(CubeRoot(X23)), np.multiply(sqrt(X21), np.cos(np.add(np.cos(np.subtract(np.add(log10(np.add(min(np.multiply(X21, X4), np.tan(-289.485)), log10(log2(min(X28, X3))))), np.subtract(log(log2(min(X29, X21))), sqrt(np.add(np.add(X0, X16), np.cos(X9))))), log10(np.multiply(sqrt(log10(CubeRoot(X24))), max(div(log2(X8), CubeRoot(X22)), np.sin(CubeRoot(X5))))))), np.abs(div(log2(div(np.tan(sqrt(div(X8, X4))), log2(sqrt(log10(X2))))), log2(log(np.abs(np.add(np.multiply(X13, X11), np.subtract(X9, X16))))))))))), CubeRoot(X2)), np.tan(np.multiply(np.sin(X25), np.multiply(log10(np.multiply(log2(np.cos(div(np.tan(X3), np.sin(X15)))), max(np.multiply(np.sin(np.sin(div(X9, X18))), np.multiply(np.sin(X5), np.subtract(X28, X25))), CubeRoot(CubeRoot(np.sin(X10)))))), np.tan(np.cos(np.tan(div(np.add(np.add(X1, X19), np.multiply(X17, X15)), max(np.subtract(X10, X7), log10(X13))))))))))))))))), X29)))))))), log(np.sin(max(np.cos(np.sin(log2(log10(np.add(np.multiply(log2(CubeRoot(np.abs(-665.952))), np.abs(log(np.sin(X12)))), np.tan(min(div(log(X28), np.cos(sqrt(np.tan(X28)))), log(X26)))))))), np.subtract(np.multiply(max(X17, X4), np.cos(log2(X28))), CubeRoot(max(X10, X5)))))))',
'np.multiply(np.add(np.sin(-441.475), np.abs(log10(max(CubeRoot(X29), max(np.multiply(X12, log10(X18)), X28))))), np.multiply(np.subtract(max(np.subtract(max(np.tan(np.abs(np.subtract(np.cos(X18), np.abs(log(X28))))), np.abs(sqrt(log(np.subtract(np.cos(X16), log(np.cos(np.cos(div(np.add(CubeRoot(min(max(sqrt(np.tan(max(X12, X14))), np.cos(X23)), X25)), log10(log(np.add(sqrt(X5), div(X18, X12))))), np.sin(np.cos(CubeRoot(X0)))))))))))), div(np.add(log2(X21), CubeRoot(X18)), np.sin(np.abs(sqrt(X7))))), np.add(X22, log2(max(X5, X0)))), log2(X12)), np.abs(log2(X4))))',
'np.multiply(np.add(np.add(CubeRoot(np.add(-411.009, min(X19, np.tan(CubeRoot(max(sqrt(np.add(np.sin(log10(np.sin(CubeRoot(log2(7.196))))), np.sin(sqrt(log10(log2(log(max(log2(np.add(div(log2(np.tan(X15)), log10(div(X29, X23))), sqrt(log(log2(X24))))), min(log2(np.multiply(np.sin(sqrt(581.096)), log2(log(X24)))), log10(np.cos(np.subtract(np.subtract(X10, X3), div(X20, X24))))))))))))), div(min(X11, log(sqrt(sqrt(X23)))), div(np.multiply(CubeRoot(div(X26, X0)), np.abs(np.sin(log(np.cos(np.add(np.sin(np.sin(np.sin(X5))), min(np.abs(X18), np.tan(np.subtract(X27, X22))))))))), np.abs(np.tan(np.add(max(div(X7, X23), X20), sqrt(X16)))))))))))), log2(div(np.subtract(X29, X28), np.tan(np.subtract(X17, np.cos(np.sin(max(min(log2(242.525), np.tan(log2(log2(log10(np.subtract(log10(X28), max(log2(X1), X12))))))), sqrt(np.tan(np.cos(log2(np.abs(CubeRoot(min(X28, X18))))))))))))))), log2(div(np.multiply(np.add(np.add(X29, np.multiply(np.add(np.add(X29, X28), min(np.subtract(np.add(np.tan(max(np.multiply(np.abs(log(np.subtract(log2(log2(-197.388)), np.cos(max(X7, X0))))), np.multiply(X19, X24)), X12)), np.tan(CubeRoot(log2(X28)))), min(log2(X13), CubeRoot(X11))), X22)), max(np.subtract(np.add(np.multiply(X22, X29), CubeRoot(X12)), np.tan(X29)), log10(np.sin(CubeRoot(X14)))))), min(CubeRoot(X27), X22)), max(np.subtract(np.add(np.multiply(X22, X29), np.abs(np.multiply(np.add(np.add(X29, X28), min(min(X26, X27), X22)), max(np.subtract(np.add(np.multiply(X22, X29), CubeRoot(X12)), np.tan(X29)), log10(np.sin(CubeRoot(X14))))))), np.tan(X29)), log10(np.sin(CubeRoot(np.subtract(div(np.cos(np.abs(np.sin(np.add(np.abs(max(np.cos(np.abs(div(np.cos(X27), CubeRoot(max(max(np.multiply(log2(X23), np.add(np.subtract(np.add(X15, X7), CubeRoot(277.538)), log10(np.add(X4, X1)))), min(sqrt(log10(np.sin(X0))), min(np.add(div(X22, X22), max(X5, X18)), np.add(log10(X18), div(X29, X7))))), max(log10(np.cos(np.cos(log2(log(np.multiply(max(X7, X2), np.add(X23, np.multiply(np.sin(log2(log10(X22))), X26)))))))), log2(np.subtract(np.subtract(max(sqrt(log2(sqrt(X28))), np.sin(log(np.subtract(X16, X26)))), log(sqrt(min(np.abs(X29), np.sin(406.457))))), log2(min(np.multiply(sqrt(log(X18)), np.abs(div(X17, X8))), np.add(X12, X7))))))))))), max(log10(np.cos(X1)), np.cos(log2(sqrt(log10(np.tan(log10(div(log10(CubeRoot(X25)), np.abs(log10(X11)))))))))))), log10(max(np.cos(log2(min(CubeRoot(X20), np.sin(X21)))), CubeRoot(np.multiply(log(max(X13, X18)), np.sin(np.abs(X0)))))))))), X0), np.multiply(X25, min(log2(np.tan(CubeRoot(log10(X9)))), div(np.abs(log2(CubeRoot(X12))), np.multiply(np.abs(np.subtract(log10(max(np.multiply(log10(X23), log2(-124.646)), div(np.add(X4, X4), CubeRoot(X1)))), log(np.cos(CubeRoot(np.add(X3, X20)))))), log(np.subtract(log10(log(CubeRoot(X14))), sqrt(np.multiply(np.tan(log10(X28)), CubeRoot(min(X2, X25)))))))))))))))), np.tan(np.subtract(log10(X29), sqrt(log(np.tan(sqrt(np.cos(min(div(X15, X29), log10(np.abs(np.add(div(log(X15), log2(-633.659)), max(np.tan(X3), max(X24, X13)))))))))))))))), X28)',
'np.add(np.tan(np.abs(log(np.tan(log2(CubeRoot(np.cos(X28))))))), log10(np.multiply(min(div(X4, log2(np.sin(np.tan(CubeRoot(X3))))), np.multiply(np.subtract(CubeRoot(sqrt(np.multiply(log2(X12), div(np.cos(np.sin(X29)), log(max(log(np.add(sqrt(div(CubeRoot(np.tan(np.add(log2(X21), np.add(X13, X24)))), min(CubeRoot(np.tan(log(X9))), log(max(div(X19, X7), np.multiply(-34.156, X7)))))), sqrt(CubeRoot(div(np.add(log10(np.abs(X29)), min(log10(X18), np.abs(X3))), np.subtract(np.tan(CubeRoot(X23)), max(np.tan(sqrt(X1)), log10(np.multiply(log2(div(np.abs(log2(X1)), np.add(log2(X22), np.multiply(X5, X24)))), log2(log10(np.abs(div(X1, X6))))))))))))), div(log10(np.abs(np.sin(min(CubeRoot(np.cos(np.subtract(X19, X8))), log(max(log2(X11), max(np.tan(X26), np.subtract(X2, X23)))))))), np.subtract(div(np.add(log10(CubeRoot(np.multiply(np.multiply(X16, X23), min(X3, X19)))), np.add(max(np.sin(X17), np.cos(np.abs(X12))), np.abs(max(np.multiply(X25, -83.502), max(X4, X25))))), max(np.sin(X9), max(div(log2(log2(log(sqrt(560.922)))), np.subtract(div(X1, X12), max(X23, X23))), max(log2(np.abs(X29)), np.abs(np.abs(X25)))))), np.tan(log10(log10(min(CubeRoot(div(X9, X13)), np.abs(log10(X22)))))))))))))), div(X29, np.tan(X4))), np.abs(np.multiply(np.multiply(div(np.cos(X27), max(X4, X28)), log(-220.565)), np.abs(div(log2(min(min(np.multiply(np.abs(X4), X3), np.subtract(np.subtract(np.multiply(np.add(X7, X28), np.multiply(X17, 67.307)), X29), log2(X28))), max(np.abs(log(X9)), X27))), np.cos(CubeRoot(np.add(np.subtract(np.tan(np.cos(X14)), log(min(np.sin(log(-20.134)), np.subtract(X7, X28)))), X13))))))))), np.sin(log2(X26)))))',
'np.tan(CubeRoot(np.subtract(np.cos(min(sqrt(max(np.multiply(np.cos(np.sin(max(np.multiply(X12, np.multiply(np.multiply(np.sin(X20), np.cos(max(X9, X8))), sqrt(X5))), np.cos(div(log2(log(np.cos(np.multiply(min(X29, X22), max(X29, X8))))), log(np.abs(np.add(div(np.subtract(log(log10(np.cos(max(X6, sqrt(np.subtract(sqrt(CubeRoot(np.subtract(np.tan(log2(sqrt(X17))), log10(log2(max(np.abs(np.subtract(np.abs(X10), div(X25, X28))), CubeRoot(np.cos(np.abs(X11))))))))), max(log2(np.tan(np.sin(CubeRoot(X21)))), log(sqrt(log10(np.subtract(X22, log10(X6)))))))))))), sqrt(log10(np.cos(X13)))), np.tan(np.subtract(log10(sqrt(np.multiply(X5, X26))), log(np.sin(sqrt(X29)))))), max(min(min(max(np.abs(max(X10, X23)), log2(min(X2, np.abs(CubeRoot(X26))))), log2(sqrt(min(X7, X10)))), np.tan(np.multiply(np.sin(np.sin(np.tan(sqrt(np.sin(div(min(X24, X12), np.multiply(log10(max(max(log(X11), X1), max(log2(X26), np.abs(X10)))), np.multiply(sqrt(X2), np.multiply(X20, X24))))))))), log(np.add(log10(X10), np.abs(X3)))))), np.sin(sqrt(div(np.add(np.subtract(X27, X7), np.tan(np.sin(sqrt(np.subtract(log10(np.tan(np.abs(np.add(CubeRoot(sqrt(np.tan(log(X6)))), np.abs(log(np.multiply(np.multiply(X4, X0), X4))))))), np.sin(div(np.multiply(sqrt(np.subtract(np.abs(np.sin(np.sin(X22))), min(div(np.multiply(X24, X7), CubeRoot(X4)), CubeRoot(log10(X7))))), sqrt(np.abs(log(log10(np.subtract(X13, X29)))))), np.subtract(np.cos(min(CubeRoot(sqrt(np.abs(-60.637))), np.add(np.subtract(log2(X11), np.tan(X28)), np.multiply(log10(X22), np.tan(X12))))), log10(np.tan(np.tan(np.add(np.cos(X7), CubeRoot(X5))))))))))))), np.multiply(CubeRoot(X5), log2(X19)))))))))))))), max(np.multiply(np.multiply(X28, X26), min(np.cos(log10(X24)), X4)), CubeRoot(div(sqrt(max(np.cos(X17), log(X8))), CubeRoot(min(X28, X12)))))), log2(np.abs(np.tan(log10(np.add(X28, div(CubeRoot(np.sin(CubeRoot(min(X26, np.sin(X23))))), min(X29, np.multiply(sqrt(X27), X27)))))))))), np.tan(log(np.subtract(X28, X12))))), CubeRoot(X28))))',



###############################################################################################################
# Standard Scaler + SVMSMOTE Class 2 
###############################################################################################################
'np.multiply(X26, log2(div(div(np.abs(np.multiply(X28, div(X28, np.sin(np.multiply(np.multiply(log2(CubeRoot(np.abs(np.cos(max(np.cos(min(CubeRoot(X4), div(np.tan(sqrt(np.abs(log2(np.cos(np.cos(np.abs(max(min(min(log10(np.add(np.sin(X3), np.add(np.cos(X22), X17))), np.multiply(np.subtract(CubeRoot(np.add(X20, sqrt(X21))), np.sin(np.subtract(X6, X26))), np.abs(log2(log(X17))))), div(X14, X24)), np.cos(sqrt(np.subtract(log2(CubeRoot(div(379.901, X15))), log2(max(np.cos(X22), log10(np.cos(X24))))))))))))))), min(sqrt(log10(div(max(np.multiply(div(log10(np.sin(max(np.subtract(np.abs(np.sin(X5)), log2(CubeRoot(log2(X26)))), div(div(np.subtract(max(X14, X18), np.cos(X20)), sqrt(X13)), np.subtract(max(X3, X21), log2(np.sin(X27))))))), np.tan(CubeRoot(div(np.tan(X17), max(X23, X20))))), np.abs(sqrt(X17))), np.subtract(np.abs(X2), sqrt(X2))), np.multiply(X10, max(X1, X26))))), np.subtract(log2(CubeRoot(X28)), min(X1, X26)))))), np.multiply(max(np.sin(log(np.cos(np.cos(np.abs(np.cos(CubeRoot(CubeRoot(X23)))))))), X28), np.subtract(CubeRoot(log10(log2(X28))), sqrt(min(np.add(log10(log(np.sin(np.abs(CubeRoot(np.tan(np.sin(np.sin(498.794)))))))), div(log10(np.add(np.subtract(X26, X8), np.add(X28, X15))), log(CubeRoot(X7)))), sqrt(np.tan(X4))))))))))), np.add(np.abs(CubeRoot(log(div(np.sin(log(np.tan(np.sin(np.abs(X13))))), np.multiply(log2(np.tan(np.tan(np.sin(log10(-178.387))))), np.tan(log10(X12))))))), log10(np.abs(max(np.abs(np.add(np.add(-177.599, np.subtract(np.tan(div(log10(X13), CubeRoot(X20))), max(X11, np.multiply(X3, log10(X0))))), log10(np.add(np.abs(log2(X9)), CubeRoot(min(X27, X12)))))), np.sin(CubeRoot(np.add(CubeRoot(min(max(min(X26, X16), min(X12, np.sin(X8))), min(np.add(X9, X15), sqrt(X1)))), min(log10(np.abs(np.cos(X17))), np.sin(CubeRoot(sqrt(log2(np.tan(X27)))))))))))))), log(max(sqrt(X28), X29))))))), np.multiply(log2(CubeRoot(np.abs(np.cos(max(np.cos(min(CubeRoot(X4), div(np.tan(sqrt(np.abs(log2(np.cos(np.cos(np.abs(max(min(min(log10(np.add(np.sin(X0), np.tan(CubeRoot(max(X29, X8))))), np.multiply(np.subtract(CubeRoot(np.add(X20, sqrt(X16))), np.sin(np.subtract(X6, X26))), np.abs(log2(log(X17))))), X5), np.cos(sqrt(np.subtract(log2(CubeRoot(div(379.901, X15))), log2(max(np.cos(X22), log10(np.cos(X24))))))))))))))), min(sqrt(div(X3, X23)), np.subtract(log2(CubeRoot(X28)), min(X1, X26)))))), np.multiply(max(np.add(log2(X4), X14), X28), np.subtract(CubeRoot(log10(log2(X28))), sqrt(min(np.add(log10(np.sin(np.add(CubeRoot(sqrt(log2(min(CubeRoot(X15), X28)))), np.cos(np.tan(log10(CubeRoot(X18))))))), div(log10(np.add(np.subtract(X26, X8), np.add(X28, X15))), log(CubeRoot(np.cos(X19))))), min(X12, X3)))))))))), np.add(np.abs(X22), log10(np.abs(max(np.abs(np.add(np.add(-177.599, np.subtract(CubeRoot(np.add(X27, X26)), np.subtract(np.subtract(min(X26, X6), max(X10, max(X4, X3))), CubeRoot(np.tan(sqrt(log(X29))))))), np.cos(CubeRoot(min(np.abs(log10(X12)), np.abs(X18)))))), log2(X25))))))), np.multiply(div(np.tan(np.cos(CubeRoot(np.cos(np.cos(log(X26)))))), X14), min(div(X2, 438.007), np.tan(X29))))))',
'div(X28, min(np.subtract(np.subtract(max(np.add(log2(np.add(log10(X14), log10(X10))), X6), min(np.abs(np.tan(min(np.subtract(np.abs(X17), max(sqrt(np.subtract(np.sin(min(np.cos(X10), log2(max(np.sin(min(sqrt(X19), np.abs(div(log(X14), min(np.abs(np.tan(min(X29, min(X25, np.add(np.subtract(log(max(X26, X14)), min(np.abs(CubeRoot(np.subtract(X4, X18))), X15)), np.cos(log10(X7))))))), np.add(np.tan(X1), np.sin(np.multiply(X2, X7)))))))), np.abs(X26))))), sqrt(log2(X9)))), log2(div(min(CubeRoot(np.multiply(np.abs(np.multiply(X4, -134.852)), log10(X26))), X15), np.add(np.add(np.abs(X1), CubeRoot(X14)), np.multiply(X6, X14)))))), min(np.add(np.abs(log2(log10(np.multiply(max(sqrt(np.subtract(X0, X8)), log2(X10)), np.add(X15, log2(sqrt(log2(min(log10(np.abs(log(div(CubeRoot(np.multiply(np.multiply(X7, np.cos(X18)), X9)), np.subtract(np.add(np.multiply(np.sin(min(np.subtract(sqrt(np.multiply(X6, X3)), CubeRoot(np.subtract(X20, X27))), np.subtract(np.cos(max(X12, X7)), sqrt(log(X10))))), min(X23, min(max(log10(log10(max(np.multiply(sqrt(log2(X10)), np.cos(log2(X4))), np.add(X12, sqrt(np.subtract(div(X24, X2), np.add(X12, X29))))))), np.add(np.sin(np.tan(X28)), np.sin(np.multiply(X27, X2)))), div(sqrt(CubeRoot(X11)), sqrt(np.tan(X18)))))), div(log(log(max(np.tan(log2(X29)), np.subtract(max(np.abs(max(log2(log(min(np.add(min(X14, X0), np.subtract(X20, X16)), np.tan(CubeRoot(X4))))), max(np.tan(div(CubeRoot(log2(X19)), np.tan(np.subtract(X24, X1)))), np.multiply(sqrt(max(div(X10, X7), min(X4, X20))), log2(np.add(div(X12, X26), min(X5, X16))))))), np.tan(log2(np.tan(sqrt(np.subtract(div(log(X7), np.subtract(X18, X13)), max(CubeRoot(X4), np.subtract(X22, X14)))))))), div(X5, X18))))), np.subtract(np.multiply(np.add(X1, X5), np.tan(np.cos(log10(X21)))), np.subtract(np.subtract(np.subtract(np.multiply(72.913, X12), np.add(X5, X9)), log2(min(X11, X20))), np.sin(CubeRoot(min(423.159, X29))))))), div(np.sin(div(log(log10(X20)), log10(log2(CubeRoot(np.tan(X15)))))), np.tan(np.sin(min(log(np.add(np.multiply(X27, X6), min(CubeRoot(303.697), max(X6, X27)))), log(min(np.multiply(X29, X21), np.sin(X0)))))))))))), log2(np.cos(min(np.abs(X18), div(-300.543, X23))))))))))))), CubeRoot(np.abs(X22))), np.add(sqrt(min(479.779, X1)), np.cos(min(np.cos(X13), X17))))))), np.add(np.tan(sqrt(X14)), np.sin(np.multiply(X2, X7))))), max(X7, X29)), X18), X7))',
'np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(X18, CubeRoot(X28)), np.subtract(X29, np.add(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(X18, CubeRoot(X28)), np.subtract(X29, np.add(log(log(min(log(min(X25, CubeRoot(X3))), np.tan(X20)))), np.multiply(np.cos(sqrt(np.tan(min(log(np.abs(X28)), X10)))), CubeRoot(36.323))))), CubeRoot(X28)), np.subtract(X29, np.add(log(CubeRoot(sqrt(log10(log(np.add(div(CubeRoot(np.sin(X5)), min(X17, X6)), np.cos(CubeRoot(np.multiply(X9, X11))))))))), np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(X12, CubeRoot(X28)), CubeRoot(X28)), np.subtract(X29, np.add(log(log(min(log(np.abs(np.multiply(np.add(min(np.tan(X24), np.add(np.subtract(np.subtract(X7, X29), min(X14, X28)), np.multiply(CubeRoot(-107.487), np.abs(X18)))), min(X1, X27)), log2(X7)))), np.cos(log2(X29))))), np.multiply(np.cos(sqrt(np.tan(min(log(np.abs(X28)), log2(np.subtract(np.subtract(np.subtract(np.subtract(X12, CubeRoot(X28)), CubeRoot(X28)), np.subtract(X29, np.add(log(log(min(log(np.abs(np.multiply(np.add(np.abs(div(log2(X15), np.cos(X7))), min(X1, X27)), log2(X7)))), np.cos(log2(X29))))), np.multiply(np.cos(sqrt(np.tan(min(log(np.abs(X28)), log2(np.tan(X13)))))), CubeRoot(X21))))), CubeRoot(X28))))))), CubeRoot(X21))))), CubeRoot(X28)), np.subtract(X29, np.add(log(log(min(div(X29, X28), log(min(log(np.abs(np.abs(X25))), CubeRoot(np.add(CubeRoot(max(log10(np.cos(div(X9, X20))), np.sin(max(np.add(X2, X4), CubeRoot(X19))))), np.abs(log10(np.multiply(np.multiply(max(np.sin(np.cos(div(log2(np.add(CubeRoot(134.179), sqrt(np.multiply(div(log(X0), np.tan(log10(CubeRoot(max(np.cos(np.sin(np.multiply(np.add(X12, X20), np.abs(X10)))), np.subtract(sqrt(X26), X26)))))), sqrt(np.multiply(X25, X22)))))), min(np.abs(X1), CubeRoot(X26))))), np.add(CubeRoot(X20), np.abs(X0))), np.cos(min(X22, X19))), max(min(np.sin(log2(X5)), np.tan(X17)), log2(np.tan(X16))))))))))))), np.multiply(np.abs(np.add(log(log(min(min(np.tan(np.abs(log10(np.sin(X13)))), X11), log(X28)))), np.multiply(sqrt(CubeRoot(log(min(sqrt(X22), np.add(CubeRoot(np.sin(np.cos(np.sin(sqrt(np.abs(np.tan(CubeRoot(X21)))))))), X21))))), np.sin(sqrt(np.abs(X18)))))), log2(np.add(CubeRoot(134.179), sqrt(np.multiply(div(log(X0), np.tan(log10(CubeRoot(max(np.cos(np.sin(np.multiply(np.add(X12, X20), np.abs(X10)))), np.tan(np.tan(div(log2(X9), log2(X5))))))))), sqrt(np.multiply(X25, X22)))))))))), CubeRoot(X28))))), log10(np.abs(np.add(X9, X16)))), np.multiply(np.cos(sqrt(np.tan(min(log(np.abs(X28)), X10)))), CubeRoot(36.323))))), CubeRoot(X28)), np.subtract(X29, np.add(np.abs(np.subtract(log10(np.add(X12, X10)), np.cos(log2(X9)))), np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(X12, CubeRoot(X28)), max(X12, X19)), np.subtract(X29, np.add(log(log(min(log(np.abs(np.multiply(np.add(min(np.add(X26, X17), np.add(np.subtract(np.subtract(X7, X29), min(X14, X28)), np.multiply(CubeRoot(-107.487), np.abs(X18)))), div(CubeRoot(log(log2(log10(X17)))), div(log(X26), np.abs(np.cos(np.cos(np.sin(np.cos(np.add(np.cos(np.sin(np.cos(log(X7)))), np.subtract(np.sin(CubeRoot(np.abs(X17))), np.add(np.cos(min(X9, X14)), np.multiply(min(X5, X4), np.tan(X12))))))))))))), log2(X7)))), log(log(X29))))), np.multiply(np.cos(sqrt(np.tan(min(log(np.tan(X28)), np.tan(np.subtract(np.cos(log(X8)), X10)))))), np.add(X17, np.tan(np.cos(np.abs(np.sin(CubeRoot(np.abs(X27))))))))))), CubeRoot(X28)), np.subtract(X29, np.add(log(log(min(div(X29, X28), np.sin(np.cos(div(CubeRoot(np.subtract(np.tan(log2(min(X27, X29))), log2(log10(log(log2(X29)))))), log10(min(div(max(np.multiply(np.abs(np.abs(X25)), CubeRoot(X20)), div(X13, X16)), max(log2(max(np.tan(X29), np.subtract(X11, X1))), np.tan(log10(np.cos(X18))))), CubeRoot(np.abs(X4)))))))))), np.multiply(np.abs(np.add(log(log(min(min(np.tan(max(min(div(max(np.multiply(X10, X1), np.sin(X7)), div(np.tan(X22), min(np.add(X1, X26), X21))), np.cos(CubeRoot(X7))), log2(np.subtract(np.tan(np.abs(X11)), np.abs(min(X23, X11)))))), np.multiply(np.tan(np.abs(min(log2(log2(X8)), max(CubeRoot(X16), log(X8))))), np.subtract(X4, X13))), log(X28)))), np.multiply(np.cos(min(np.cos(log(sqrt(np.add(log10(div(X29, X17)), np.sin(X28))))), np.add(X13, np.tan(log2(div(X0, X8)))))), np.sin(sqrt(np.abs(X18)))))), log2(np.add(CubeRoot(134.179), np.tan(np.tan(X25)))))))), CubeRoot(X28))))), log10(np.abs(np.add(X9, min(log(log10(np.tan(X13))), np.cos(X26))))))',
'np.multiply(log2(np.multiply(np.sin(np.sin(log(CubeRoot(max(np.cos(X26), np.subtract(log10(max(log10(np.subtract(max(X1, min(min(max(sqrt(sqrt(np.subtract(np.cos(X28), log(np.sin(np.cos(log2(np.tan(max(X7, np.subtract(224.591, log(np.multiply(X23, X17)))))))))))), np.tan(sqrt(log10(CubeRoot(np.subtract(div(log2(X26), log(np.sin(log(X3)))), np.cos(min(log10(np.add(np.subtract(div(log2(np.cos(np.sin(CubeRoot(np.multiply(X20, X11))))), np.multiply(np.add(log2(sqrt(np.sin(np.cos(log2(np.tan(log(np.multiply(np.add(log2(X11), min(X3, X15)), log2(np.tan(X24)))))))))), log10(log10(log(np.subtract(div(X4, sqrt(X25)), np.abs(X23)))))), log2(np.subtract(sqrt(np.multiply(CubeRoot(sqrt(X20)), np.add(np.abs(X14), np.sin(X27)))), np.tan(np.sin(CubeRoot(log2(X18)))))))), np.cos(np.multiply(np.multiply(CubeRoot(np.cos(min(log2(div(X24, X22)), np.tan(np.abs(X14))))), log(div(sqrt(np.abs(sqrt(X26))), min(X15, X23)))), np.cos(np.tan(np.tan(log2(np.tan(sqrt(X17))))))))), div(np.sin(div(sqrt(log(sqrt(div(log(max(X6, X8)), CubeRoot(log10(np.abs(np.tan(np.subtract(max(CubeRoot(X17), log2(max(X2, X5))), X29))))))))), np.subtract(np.add(max(X9, X22), CubeRoot(X2)), CubeRoot(np.cos(np.add(np.abs(sqrt(X15)), np.subtract(min(X25, X11), sqrt(X11)))))))), CubeRoot(np.cos(X14))))), X15)))))))), np.abs(np.abs(log2(X0)))), np.cos(np.cos(np.sin(log2(X12)))))), np.tan(np.cos(np.sin(div(log10(CubeRoot(X5)), CubeRoot(np.add(np.multiply(np.sin(div(X17, X28)), max(min(X14, X26), np.cos(X16))), max(CubeRoot(log10(np.add(np.add(min(X8, -219.173), div(X19, X17)), log2(log10(X0))))), min(np.sin(np.subtract(log(np.cos(X18)), CubeRoot(np.abs(X19)))), log(sqrt(np.sin(div(X24, X2)))))))))))))), log10(log10(np.multiply(X7, X21))))), X22)))))), div(X12, log2(np.tan(X17))))), log10(np.abs(log(np.multiply(np.cos(np.subtract(CubeRoot(X29), -189.419)), div(max(log2(log(log2(X28))), log10(X26)), sqrt(X29)))))))',
'np.multiply(log2(div(np.multiply(np.abs(np.multiply(X12, X9)), np.subtract(np.multiply(np.multiply(div(X12, X29), sqrt(log(X6))), np.subtract(log10(log(max(CubeRoot(np.subtract(np.abs(min(div(log10(np.sin(log(X11))), np.sin(X28)), np.tan(np.sin(np.subtract(X26, X19))))), log2(np.cos(sqrt(np.add(np.add(np.multiply(log10(sqrt(sqrt(X14))), np.cos(np.abs(np.tan(X7)))), div(X28, X8)), log10(np.cos(X18)))))))), min(np.add(max(min(log2(X26), div(log(div(np.multiply(X11, X3), log10(log(np.abs(X19))))), np.tan(np.subtract(np.subtract(CubeRoot(max(X25, X19)), max(log(X28), np.subtract(X8, X29))), np.multiply(X8, X11))))), np.cos(X19)), np.abs(max(log2(np.abs(min(log(min(log10(np.subtract(np.cos(X3), np.subtract(np.subtract(np.sin(np.abs(div(X3, X3))), log2(log(X9))), min(min(div(X11, X23), CubeRoot(X21)), np.subtract(CubeRoot(X11), min(np.abs(np.abs(min(X27, X10))), CubeRoot(np.tan(max(X6, X21))))))))), np.add(X5, np.sin(np.sin(CubeRoot(max(np.cos(min(log10(max(X29, X20)), max(np.tan(X28), max(X14, X23)))), CubeRoot(max(-289.144, X9))))))))), np.cos(np.tan(np.abs(np.subtract(np.add(CubeRoot(X24), X12), -99.931))))))), log2(X25)))), log2(X6))))), np.multiply(X12, np.add(np.abs(X12), log(div(X5, X26)))))), np.add(X29, X26))), 151.117)), X28)'


    ]
                                                                                                                                                                                                                                                                                                                          
                                                                                                                                                                                                                                                                                                                          
RobustScaler_raw = [###############################################################################################################
# Robust Scaler + ADASYN CLASS 2 
###############################################################################################################
'np.add(div(min(np.add(min(-752.278, X19), np.abs(sqrt(X15))), np.sin(X20)), np.add(X29, X28)), log(np.sin(log10(CubeRoot(CubeRoot(X4))))))',
'np.multiply(np.add(np.multiply(np.add(log10(X10), min(np.add(np.tan(min(X25, X17)), min(log2(np.subtract(div(log(np.subtract(X1, np.add(X29, X10))), X24), min(X1, X9))), np.multiply(np.add(np.multiply(np.add(log(X28), min(np.add(CubeRoot(np.add(div(np.abs(CubeRoot(X29)), min(log10(np.sin(X4)), np.tan(X18))), sqrt(log10(np.add(X12, X6))))), min(log2(np.subtract(div(X28, X24), min(X9, X9))), np.abs(div(X0, X29)))), np.abs(np.multiply(div(X23, X16), np.subtract(np.subtract(log10(X29), sqrt(X9)), np.multiply(X28, log(np.tan(log10(sqrt(CubeRoot(X28))))))))))), sqrt(np.cos(np.subtract(X22, X3)))), min(np.add(log10(np.subtract(X12, X22)), min(log2(np.subtract(div(X28, X24), min(X1, X9))), np.abs(div(X0, X29)))), np.abs(np.multiply(div(X23, X16), np.subtract(np.subtract(log10(X29), sqrt(X9)), np.multiply(X28, log(np.tan(log10(sqrt(log2(np.multiply(X24, X21)))))))))))), sqrt(np.add(np.tan(sqrt(X13)), np.add(max(sqrt(max(div(X3, X26), np.abs(X3))), div(np.abs(log2(X11)), np.abs(max(X21, X19)))), np.cos(np.tan(X12)))))))), np.abs(np.multiply(div(X23, X16), np.subtract(-157.449, np.multiply(X28, log(np.tan(log10(sqrt(log2(np.multiply(X24, X21)))))))))))), sqrt(np.tan(sqrt(np.abs(np.add(log(X17), sqrt(log2(max(max(np.cos(np.tan(X27)), div(div(X1, X8), div(X2, X10))), np.tan(sqrt(X24))))))))))), min(np.add(np.tan(div(X6, X29)), min(log2(np.subtract(div(X28, X24), min(X1, X9))), np.abs(div(X0, X29)))), np.abs(np.multiply(min(log2(log10(X6)), log2(X15)), np.subtract(np.subtract(log10(X29), sqrt(X9)), np.multiply(X28, log(np.tan(log10(sqrt(log2(np.multiply(X24, X21)))))))))))), log2(426.072))',
'log2(div(min(np.multiply(sqrt(X19), np.cos(X29)), X28), np.multiply(max(X16, 60.559), CubeRoot(max(X29, X28)))))',
'np.add(log2(np.abs(103.287)), np.add(np.add(log2(np.abs(103.287)), np.add(div(-425.600, min(np.add(sqrt(div(log(log10(X10)), X1)), X19), X29)), log2(min(X28, np.sin(div(np.subtract(X9, X8), np.subtract(743.036, -332.415))))))), log2(min(X28, np.sin(div(np.subtract(X9, X8), np.subtract(743.036, -332.415)))))))',
'np.add(log2(min(div(X28, -325.030), div(np.sin(X29), div(454.061, np.sin(np.tan(log(np.sin(np.cos(np.subtract(log(X4), np.cos(X6))))))))))), np.add(log2(min(div(X28, -325.030), div(np.sin(X29), div(454.061, np.sin(np.tan(log(np.sin(X22)))))))), np.abs(log2(439.806))))',




###############################################################################################################
# Robust Scaler + Borderline SMOTE Class 2 
###############################################################################################################
'np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(log(X28), X29), max(log2(np.abs(np.add(np.multiply(X28, X16), log10(X9)))), CubeRoot(X28))), X28), X29), np.multiply(sqrt(X15), log(X2))), X28), X29), CubeRoot(X29)), X28), X29), np.multiply(sqrt(CubeRoot(X22)), np.sin(X20))), X28), X29), X29), max(log2(np.cos(X12)), CubeRoot(X28))), X28), X29), np.multiply(sqrt(X15), log(X2))), X28), X29), CubeRoot(sqrt(X24))), X28), X29), np.multiply(sqrt(X15), log(X2))), X28), X29), CubeRoot(X28)), X28), X29), X29), max(log2(np.cos(X12)), CubeRoot(X28))), X28), X29), np.multiply(sqrt(X15), log(X2))), X28), X29), CubeRoot(X29)), X28), X29), np.multiply(X1, X1)), X28), X29), CubeRoot(X28)), X28)',
'log2(np.subtract(X28, np.cos(sqrt(max(np.subtract(log2(X29), np.subtract(log2(np.subtract(X28, np.cos(sqrt(sqrt(sqrt(np.abs(np.add(np.abs(np.sin(np.cos(np.subtract(X6, X1)))), min(np.multiply(CubeRoot(np.tan(X14)), np.add(np.subtract(X23, X22), np.add(X13, X10))), sqrt(log10(div(X13, X16)))))))))))), X29)), CubeRoot(div(log(log10(X29)), min(sqrt(max(log(sqrt(np.abs(log(X22)))), max(log(log2(CubeRoot(np.abs(div(CubeRoot(np.multiply(X23, np.subtract(min(log2(log(X10)), log2(np.abs(X15))), np.add(max(max(X26, X3), np.abs(X14)), max(np.add(sqrt(np.tan(X2)), CubeRoot(np.abs(CubeRoot(np.tan(sqrt(max(CubeRoot(X18), np.subtract(X10, X5)))))))), np.abs(np.multiply(sqrt(X13), np.sin(X9)))))))), sqrt(CubeRoot(max(np.tan(np.add(sqrt(log(min(np.cos(CubeRoot(X13)), np.tan(CubeRoot(X27))))), np.subtract(np.add(sqrt(div(div(X11, X5), sqrt(X20))), CubeRoot(log10(np.cos(X29)))), sqrt(np.cos(np.cos(min(X19, X21))))))), log10(log10(log2(X20))))))))))), log(log10(max(np.multiply(log10(min(log10(min(log2(X5), np.tan(np.abs(min(X11, X7))))), np.abs(log(log(np.subtract(log(X18), np.abs(div(X1, X3)))))))), np.abs(min(np.abs(np.cos(np.tan(sqrt(sqrt(X17))))), np.multiply(np.multiply(log10(log(np.cos(X20))), log(np.cos(np.tan(X18)))), sqrt(div(X1, X27)))))), np.tan(np.tan(X4)))))))), np.cos(CubeRoot(91.648))))))))))',
'log2(min(div(np.tan(log(sqrt(CubeRoot(np.tan(log10(CubeRoot(min(np.multiply(np.abs(X19), max(X26, X21)), np.add(np.subtract(X11, X0), np.tan(X5)))))))))), 185.530), np.add(X28, min(sqrt(np.add(-122.266, min(X14, X1))), np.multiply(max(log2(np.cos(X6)), max(X29, 212.505)), np.add(X28, X29))))))',
'np.subtract(np.subtract(min(np.tan(212.341), log2(np.abs(X17))), X29), np.multiply(np.subtract(np.abs(np.subtract(log(min(CubeRoot(X11), max(X29, X24))), min(log2(CubeRoot(X29)), np.multiply(log10(np.tan(log10(max(np.tan(np.add(log(X23), np.add(X24, X12))), np.abs(X26))))), sqrt(log(np.cos(X29))))))), np.subtract(CubeRoot(X29), np.subtract(np.abs(np.subtract(log(min(CubeRoot(X11), max(X29, X24))), min(log2(CubeRoot(X29)), np.subtract(log10(np.tan(log10(max(np.tan(np.add(log(X23), np.add(X24, X12))), np.abs(X26))))), sqrt(log(np.cos(X29))))))), np.subtract(CubeRoot(X29), sqrt(X10))))), CubeRoot(X28)))',
'log2(min(np.multiply(min(np.multiply(np.sin(X28), min(X27, X4)), np.add(np.add(log2(log2(sqrt(div(sqrt(np.sin(np.cos(X19))), log(CubeRoot(np.sin(log2(X28)))))))), CubeRoot(np.tan(np.tan(np.cos(min(np.add(np.add(min(np.abs(-100.452), min(np.add(log2(log2(sqrt(sqrt(X28)))), log10(np.sin(sqrt(np.tan(div(div(np.sin(log2(X19)), log2(np.subtract(X10, X5))), log2(log2(log(X27))))))))), X28)), X29), X29), np.abs(log(np.cos(div(log10(np.cos(np.sin(min(X21, CubeRoot(np.add(div(np.add(np.subtract(X29, X22), np.multiply(X18, X2)), CubeRoot(log(X19))), CubeRoot(min(min(X8, X9), log2(X26))))))))), X29)))))))))), X28)), X7), np.add(np.add(log2(log2(sqrt(sqrt(X28)))), CubeRoot(np.tan(np.tan(np.cos(min(np.add(np.add(min(np.sin(X15), min(np.add(log2(log2(sqrt(sqrt(X28)))), log10(np.sin(np.cos(np.cos(np.multiply(log2(np.cos(X29)), np.subtract(sqrt(np.tan(X4)), log10(np.cos(np.sin(X7)))))))))), X28)), X29), X29), np.abs(log(np.cos(div(log10(CubeRoot(X4)), X29)))))))))), X28)))',



###############################################################################################################
# Robust Scaler + SMTOE Class 2 
###############################################################################################################
'log2(np.subtract(np.subtract(sqrt(log10(max(max(min(X16, X9), np.sin(np.tan(sqrt(np.abs(np.sin(378.443)))))), np.multiply(np.add(np.abs(CubeRoot(np.subtract(X28, X12))), div(min(np.multiply(np.subtract(np.subtract(np.subtract(sqrt(log10(max(max(div(CubeRoot(np.multiply(CubeRoot(np.multiply(np.add(X19, X7), sqrt(X2))), np.cos(np.cos(div(X26, X22))))), np.cos(X8)), np.sin(log(X15))), np.multiply(np.add(np.abs(CubeRoot(np.subtract(X28, X12))), log(X27)), div(X5, X10))))), X28), X28), max(np.sin(np.abs(sqrt(sqrt(np.multiply(X17, X20))))), log10(min(np.sin(np.multiply(np.multiply(X5, X6), np.multiply(X20, X6))), log2(max(np.add(X6, X11), np.abs(X21))))))), max(sqrt(max(X26, -119.112)), log2(X1))), min(sqrt(log10(log10(min(np.add(log2(np.cos(div(np.add(X0, -355.222), np.cos(X21)))), np.sin(np.abs(np.abs(X28)))), min(min(np.add(CubeRoot(X11), CubeRoot(X7)), log(CubeRoot(X10))), max(CubeRoot(max(X10, X29)), div(np.add(X12, X12), log10(X23)))))))), log(np.sin(np.abs(X20))))), X29)), div(X5, X10))))), X28), X28))',
'np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(log2(X28), np.sin(log(-183.455))), X29), X28), X29), X29), X29), X28), X29), X29), X29), X29), X28), X29), X28), X28), X29), X28), CubeRoot(X29)), X29), X29), X28), X29), X29), X28), X29), X29), X29), X29), X28), X29), X28), X28), X29), X28), CubeRoot(X29)), X29), X29), X28), X22), X29), X29), X28), X29), X28), X29), X28), X29), X29), X28), X28), X29), X29), X28), X29), X29), X28), CubeRoot(X29)), X29), X29), X29), X29), X28), X29), X29), X29), X29), X28), X29), X28), X28), X29), X28), CubeRoot(X29)), X29), X29), X28), X22), X29), X29), X28), X29), X28), X29), X28), X29), X29), X28), CubeRoot(X29)), sqrt(np.add(np.subtract(min(CubeRoot(max(div(np.cos(np.cos(X20)), log2(min(X28, X0))), div(np.abs(np.cos(-246.430)), div(np.abs(X18), np.multiply(X3, X22))))), sqrt(np.sin(CubeRoot(np.abs(np.sin(X25)))))), np.multiply(np.multiply(sqrt(min(np.cos(log(X24)), min(log(X19), np.subtract(X1, X1)))), np.add(np.sin(log(log10(X22))), CubeRoot(np.abs(sqrt(X5))))), np.multiply(np.sin(min(CubeRoot(log(347.211)), log(CubeRoot(X13)))), min(log(log(np.tan(X22))), np.add(max(log10(X25), log2(X0)), sqrt(np.add(X4, X15))))))), log10(CubeRoot(np.add(div(min(CubeRoot(sqrt(X13)), log10(sqrt(X4))), np.multiply(max(log10(X20), div(X25, X20)), np.add(div(X26, X6), log10(X20)))), sqrt(log(sqrt(min(X15, X21)))))))))), X29), X28), CubeRoot(X29)), X29), X29), X28), X22), X29), X29), X28), X29), X28), X29), X28), X29), X29), X28), X28), X29), X29), X28), X29), X29), X28), CubeRoot(X29)), X29), X29), X29), X29), X29), X29), X28), X29), X28), CubeRoot(X29)), X29), X29), X28), X29), X28), X28), X29), X29), X28), CubeRoot(X29)), X29), X29), X28), X29), X28)',
'np.subtract(np.subtract(np.subtract(log2(min(X28, div(np.add(np.add(min(X14, X23), X4), np.multiply(X25, X12)), -59.183))), min(max(X16, sqrt(-396.545)), log(np.subtract(max(div(401.717, X28), np.subtract(max(log(min(max(div(CubeRoot(max(X19, X27)), log10(sqrt(X1))), np.sin(CubeRoot(X26))), log10(np.tan(np.add(np.tan(X23), log(X7)))))), np.abs(np.subtract(X23, X9))), div(X29, X12))), div(X29, X12))))), min(max(X16, sqrt(-396.545)), log(np.subtract(max(div(401.717, X28), np.subtract(max(log(np.tan(X25)), np.abs(np.subtract(X23, X9))), div(X29, X12))), div(X29, X12))))), min(log(-524.878), log(np.subtract(max(X28, np.tan(12.586)), div(X29, np.subtract(X1, X11))))))',
'log2(div(X28, np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(max(CubeRoot(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(max(CubeRoot(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(max(CubeRoot(CubeRoot(X28)), log10(np.cos(X20))), X29), X29), X29), X29), X29), X29), X29), X29), X29), X29), X29)), log10(CubeRoot(sqrt(np.sin(max(max(X17, np.sin(np.subtract(CubeRoot(X4), log2(np.sin(X9))))), sqrt(206.685))))))), X29), X29), X29), X29), X29), X29), X29), X29), X29), X29), X29), X29), X29), X29), X29), X29), X29), X29), np.multiply(-265.503, X28)), X29), X29)), log10(CubeRoot(sqrt(np.sin(max(max(X17, CubeRoot(max(np.cos(min(X15, X24)), np.add(log(X20), log(X3))))), sqrt(206.685))))))), X29), X29), X29), X29), X29), X29), X29), X29), X29), X29), X29)))',
'np.subtract(np.subtract(np.subtract(np.subtract(log(max(X8, 507.146)), np.multiply(502.749, np.abs(X29))), div(np.add(CubeRoot(np.multiply(div(X14, X14), np.abs(X20))), div(X11, X29)), X28)), CubeRoot(X28)), div(np.add(np.multiply(log2(sqrt(log2(-374.004))), np.abs(log2(X20))), div(X11, X29)), X28))',



###############################################################################################################
# Robust Scaler + SVMSMOTE Class 2 
###############################################################################################################
'log2(min(div(np.abs(X16), -246.595), np.multiply(np.add(div(np.multiply(np.sin(X12), np.subtract(np.multiply(X4, X15), log2(X7))), np.abs(np.multiply(np.cos(X23), X7))), np.abs(np.multiply(np.add(div(div(X12, np.sin(X2)), np.add(np.subtract(X29, X14), X0)), np.abs(np.subtract(X12, np.add(div(np.multiply(div(X12, log(X29)), div(np.sin(X5), np.multiply(CubeRoot(sqrt(log2(X15))), sqrt(CubeRoot(np.tan(X29)))))), np.abs(np.multiply(X7, X7))), np.abs(div(np.subtract(np.add(X11, np.abs(np.sin(X5))), np.subtract(X22, X12)), max(max(X15, np.abs(np.cos(X14))), np.multiply(X8, X8)))))))), np.multiply(X7, X28)))), np.multiply(np.abs(np.multiply(np.add(div(np.multiply(np.sin(X12), np.subtract(log2(np.tan(X14)), log2(X7))), np.abs(log(X28))), np.abs(np.multiply(np.add(div(div(X12, np.sin(X2)), np.add(np.subtract(X29, X14), X0)), np.abs(np.subtract(X12, np.add(div(np.multiply(div(X12, log(X29)), div(max(CubeRoot(log10(min(np.tan(np.add(CubeRoot(sqrt(X0)), np.subtract(sqrt(np.abs(X8)), min(X4, X5)))), np.subtract(div(X15, X13), div(X22, X7))))), div(np.multiply(np.add(div(np.multiply(np.sin(X12), np.subtract(log2(np.tan(X14)), log2(np.abs(X10)))), np.abs(min(X14, X4))), np.abs(np.multiply(np.add(div(X27, X4), np.abs(np.subtract(X12, np.add(div(np.multiply(div(X12, log10(X28)), div(max(max(sqrt(X11), np.sin(np.multiply(X13, X10))), sqrt(log10(np.multiply(X20, X0)))), np.multiply(CubeRoot(sqrt(log2(X15))), sqrt(CubeRoot(np.tan(X29)))))), np.abs(np.tan(X18))), np.abs(div(min(X13, 11.331), np.abs(np.abs(log10(min(X26, X1)))))))))), np.multiply(X7, X28)))), np.multiply(np.abs(log(X20)), X28)), np.subtract(X26, X0))), np.multiply(CubeRoot(np.sin(X22)), sqrt(CubeRoot(np.tan(X29)))))), div(X22, X1)), np.abs(div(np.subtract(np.add(X11, np.abs(X16)), np.subtract(X22, X12)), max(max(X15, np.abs(np.cos(X14))), np.multiply(log2(np.multiply(X19, X24)), X8)))))))), np.multiply(X7, X28)))), np.multiply(np.abs(np.subtract(np.sin(log(np.add(np.abs(X13), np.sin(log10(X29))))), X12)), X28))), X28))))',
'log2(min(max(div(np.abs(np.add(sqrt(np.abs(max(X13, X23))), np.subtract(X15, min(-209.684, -617.530)))), CubeRoot(X28)), np.add(log(log(min(X13, log(X17)))), np.add(np.multiply(X28, max(max(np.abs(np.abs(log2(CubeRoot(X29)))), X7), np.cos(np.sin(log(X10))))), np.add(div(X29, sqrt(sqrt(div(log10(min(np.add(np.subtract(X2, X6), min(X16, X3)), max(max(X10, X22), np.add(np.add(np.sin(X10), X17), min(X3, X3))))), div(np.multiply(np.cos(np.add(X0, X4)), log(log(X18))), sqrt(min(np.subtract(np.abs(X14), sqrt(np.abs(min(log10(np.multiply(X5, X22)), np.sin(CubeRoot(-541.857)))))), X1))))))), np.add(np.multiply(X28, max(max(np.abs(np.abs(log2(CubeRoot(X29)))), X7), min(X14, -432.942))), np.add(np.add(log2(CubeRoot(X29)), np.add(max(div(np.abs(np.add(np.subtract(div(X0, X6), X22), np.subtract(X15, min(-209.684, -617.530)))), CubeRoot(X28)), np.add(CubeRoot(log2(X6)), np.add(np.multiply(X28, log(np.subtract(X25, log(X7)))), np.add(div(X29, sqrt(sqrt(min(X11, X8)))), np.add(log2(X11), np.add(np.add(log10(X13), np.add(log10(np.add(X8, X5)), np.add(np.multiply(X28, max(max(np.abs(np.abs(log2(CubeRoot(X29)))), X7), np.add(log(min(log2(CubeRoot(np.cos(np.multiply(X17, X2)))), log10(X4))), min(np.sin(max(np.multiply(log(np.tan(X20)), max(div(X29, X22), div(X6, X19))), min(log2(np.abs(X14)), np.sin(log2(X20))))), max(np.multiply(np.tan(log(div(X15, X28))), max(np.cos(sqrt(X13)), log2(log10(X29)))), np.sin(np.abs(np.subtract(np.abs(X8), div(X0, X12))))))))), log2(CubeRoot(X29))))), np.add(sqrt(X28), np.add(div(X29, sqrt(sqrt(np.cos(X6)))), np.add(np.multiply(X28, max(np.subtract(X17, X10), log2(log2(X4)))), np.add(div(X29, sqrt(min(X2, log10(X28)))), np.add(log(np.sin(np.abs(np.abs(X14)))), np.add(np.multiply(log2(log10(div(X12, X16))), log(np.cos(X16))), np.add(div(X29, np.abs(sqrt(np.cos(np.sin(np.abs(div(X29, X28))))))), np.add(np.multiply(X28, CubeRoot(np.tan(np.subtract(np.add(X4, X19), np.multiply(X17, X27))))), np.add(np.add(log2(CubeRoot(X29)), np.add(log10(np.add(X8, X5)), np.add(np.multiply(X28, max(max(np.abs(np.abs(log2(CubeRoot(X29)))), X7), CubeRoot(div(np.add(np.multiply(sqrt(X19), sqrt(X5)), log10(np.multiply(X15, X28))), np.sin(np.multiply(np.add(X14, X4), log10(X23))))))), log2(CubeRoot(X29))))), np.add(sqrt(X28), np.add(div(X29, sqrt(sqrt(np.cos(X6)))), np.add(np.multiply(X28, max(np.subtract(X17, X10), log2(log2(X4)))), np.add(div(X29, sqrt(np.sin(X9))), np.add(log(X26), np.add(log10(np.add(np.multiply(X16, np.cos(X9)), X5)), np.add(np.multiply(X28, max(max(CubeRoot(X12), X7), np.abs(X0))), log2(CubeRoot(X29)))))))))))))))))))))))), np.add(np.multiply(np.subtract(log(log10(log10(X13))), np.add(max(sqrt(X7), CubeRoot(X12)), np.cos(np.multiply(X11, X4)))), max(max(np.abs(np.abs(log2(CubeRoot(X29)))), X7), CubeRoot(np.add(X4, np.tan(min(np.cos(log(X2)), np.add(np.subtract(X27, X8), div(X14, X11)))))))), log2(CubeRoot(X29))))), np.add(sqrt(X28), np.add(div(X29, sqrt(max(X13, X16))), np.add(np.multiply(X28, max(max(np.abs(log(sqrt(X29))), X7), sqrt(X22))), np.add(div(X29, sqrt(min(X2, min(X24, X29)))), np.add(np.multiply(X28, max(max(max(max(np.abs(max(log(np.sin(X24)), log2(np.cos(X14)))), X7), CubeRoot(np.add(X12, np.add(X27, X25)))), X7), log2(np.abs(max(-124.597, CubeRoot(X25)))))), np.add(log10(np.sin(X22)), np.add(np.multiply(X28, max(sqrt(np.multiply(log2(min(np.sin(sqrt(X4)), np.cos(np.sin(X5)))), np.sin(log(np.subtract(np.abs(X2), np.multiply(X5, X3)))))), CubeRoot(np.add(X12, np.multiply(X4, X25))))), log2(CubeRoot(X29))))))))))))))), div(sqrt(X4), -166.350)))',
'log2(min(log10(np.sin(sqrt(max(np.abs(np.abs(log2(sqrt(sqrt(-524.658))))), np.add(min(X6, np.tan(np.subtract(np.tan(np.subtract(log2(X13), log2(X23))), sqrt(np.sin(CubeRoot(CubeRoot(np.tan(CubeRoot(min(min(np.abs(X4), sqrt(X2)), np.add(np.abs(np.add(min(CubeRoot(np.sin(np.cos(np.sin(X7)))), log(np.sin(np.abs(np.add(X11, X20))))), np.sin(np.abs(max(X21, X19))))), np.subtract(np.sin(max(np.multiply(X19, X28), -38.406)), div(X15, X3))))))))))))), CubeRoot(np.multiply(X26, X26))))))), div(np.abs(np.abs(-675.156)), CubeRoot(CubeRoot(np.add(X29, X28))))))',
'np.add(min(np.add(np.add(X14, np.add(np.multiply(X22, X23), max(log10(np.abs(div(X9, -70.128))), div(div(-822.305, X28), sqrt(X18))))), np.subtract(np.multiply(max(X19, X23), log10(X9)), np.sin(X24))), np.add(min(np.add(np.add(X14, np.add(min(min(X18, X4), np.add(X14, np.add(np.abs(X4), np.subtract(log2(X28), X29)))), np.subtract(np.add(np.cos(X16), np.subtract(np.subtract(np.add(min(np.add(np.add(X14, min(X20, sqrt(X15))), np.subtract(X29, X27)), np.add(min(np.add(np.add(X14, np.add(min(min(np.add(np.add(X14, np.add(min(CubeRoot(X0), np.add(X14, np.add(np.abs(X4), np.subtract(np.multiply(X25, X7), X29)))), np.subtract(np.add(X25, np.subtract(np.subtract(np.add(min(np.add(np.add(X14, np.add(np.multiply(X22, X23), min(np.multiply(max(X7, -294.372), log10(X16)), max(log2(max(X23, X8)), log(X25))))), np.subtract(X29, X27)), np.add(min(np.add(np.add(X14, np.add(min(min(max(X27, X1), X4), np.add(X14, np.add(log10(X3), np.subtract(log2(X28), np.sin(X28))))), np.subtract(np.add(min(X20, X13), np.subtract(np.subtract(log2(X28), np.sin(X28)), X13)), np.sin(X28)))), np.subtract(np.abs(X25), X29)), max(X16, CubeRoot(div(X1, log10(np.tan(log(X11))))))), np.add(max(X22, X10), np.subtract(np.subtract(np.tan(log10(np.sin(min(div(np.tan(np.subtract(np.cos(np.add(X0, X15)), X29)), sqrt(min(X4, X22))), CubeRoot(min(np.abs(X26), np.subtract(log2(X22), CubeRoot(log10(CubeRoot(np.abs(sqrt(X16)))))))))))), np.sin(X28)), X13)))), np.add(np.cos(div(CubeRoot(X29), X2)), np.subtract(np.subtract(log2(X28), np.sin(CubeRoot(X28))), X13))), np.sin(X28)), X13)), X8))), np.subtract(np.cos(log10(X9)), X29)), np.subtract(np.add(X19, X15), sqrt(np.cos(X5)))), np.add(X14, np.multiply(X22, X29))), np.subtract(np.add(np.cos(CubeRoot(X29)), np.subtract(np.subtract(log2(X28), np.sin(X28)), X13)), np.cos(X6)))), np.subtract(np.abs(X25), X29)), max(X16, sqrt(np.add(CubeRoot(X12), np.cos(log2(np.sin(max(X22, X23)))))))), np.add(X2, np.subtract(np.subtract(np.tan(log10(np.sin(min(div(np.tan(np.subtract(np.cos(np.sin(X5)), X29)), sqrt(np.abs(X5))), CubeRoot(min(log10(log(log(sqrt(np.cos(X2))))), np.subtract(log2(X22), np.abs(np.multiply(np.abs(X7), div(X3, X26)))))))))), np.sin(X28)), X13)))), np.add(np.cos(np.multiply(X8, X22)), np.subtract(np.subtract(log2(X28), np.sin(CubeRoot(X28))), X13))), np.sin(X28)), X13)), X8))), np.subtract(np.cos(np.multiply(np.cos(np.add(log2(log(min(X3, X13))), log(max(sqrt(X25), CubeRoot(X15))))), np.sin(div(log(np.tan(log2(X14))), log2(div(np.subtract(X28, X24), np.tan(X21))))))), X29)), max(X16, sqrt(log(np.subtract(X9, X1))))), np.add(sqrt(X15), np.add(min(np.add(np.add(X14, np.add(np.multiply(X22, X23), max(log10(np.add(X17, X2)), div(div(-822.305, X28), sqrt(X18))))), np.subtract(np.multiply(max(X19, np.add(X12, X25)), log10(X9)), np.sin(X13))), np.add(min(np.add(np.add(X14, np.add(min(min(X18, X4), np.add(X14, np.add(np.abs(X4), np.subtract(log2(X28), X29)))), np.subtract(np.add(np.cos(X16), np.subtract(np.subtract(np.add(min(np.add(np.add(X14, min(X20, sqrt(X15))), np.subtract(X29, X27)), np.add(min(np.add(np.add(X14, np.add(min(min(np.add(np.add(X14, np.add(min(CubeRoot(X0), np.add(X14, np.add(np.abs(X4), np.subtract(np.multiply(X25, X7), X29)))), np.subtract(np.add(X25, np.subtract(np.subtract(np.add(min(np.add(np.add(X14, np.add(np.multiply(X22, X23), min(np.multiply(max(X7, -294.372), log10(X16)), max(log2(max(X23, X8)), log(X25))))), np.subtract(X29, X27)), np.add(min(np.add(np.add(X14, np.add(min(min(max(X27, X1), X4), np.add(X14, np.add(log10(X3), np.subtract(log2(X28), np.sin(X28))))), np.subtract(np.add(min(X20, X13), np.subtract(np.subtract(log2(X28), np.sin(X28)), X13)), np.sin(X28)))), np.subtract(np.abs(X25), X29)), max(X16, CubeRoot(div(X1, log10(np.tan(log(X11))))))), np.add(max(X22, X10), np.subtract(np.subtract(np.tan(log10(np.sin(min(div(np.tan(np.subtract(np.cos(np.add(X0, X15)), X29)), sqrt(min(X4, X22))), CubeRoot(min(np.abs(X26), np.subtract(log2(X22), CubeRoot(log10(CubeRoot(np.abs(sqrt(X16)))))))))))), np.sin(X28)), X13)))), np.add(np.cos(div(CubeRoot(X29), X2)), np.subtract(np.subtract(log2(X28), np.sin(CubeRoot(X28))), X13))), np.sin(X28)), X13)), X8))), np.subtract(np.cos(log10(X9)), X29)), np.subtract(np.add(X19, X15), sqrt(np.cos(X5)))), np.add(X14, np.multiply(X22, X29))), np.subtract(np.add(np.cos(CubeRoot(X29)), np.subtract(np.subtract(log2(X28), np.sin(X28)), X13)), np.cos(X6)))), np.subtract(np.abs(X25), X29)), max(X16, sqrt(np.add(CubeRoot(X12), np.cos(log2(np.sin(max(X22, X23)))))))), np.add(X2, np.subtract(np.subtract(np.tan(log10(np.sin(min(div(np.tan(np.subtract(np.cos(np.sin(X5)), X29)), sqrt(np.abs(X5))), CubeRoot(min(log10(log(log(sqrt(np.cos(X2))))), np.subtract(log2(X22), np.abs(np.multiply(np.abs(X7), div(X3, X26)))))))))), np.sin(X28)), X13)))), np.add(np.cos(np.multiply(X8, X22)), np.subtract(np.subtract(log2(X28), np.sin(CubeRoot(X28))), X13))), np.sin(X28)), X13)), X8))), np.subtract(np.cos(np.multiply(np.cos(np.add(log2(log(min(X3, X13))), log(max(sqrt(X25), CubeRoot(X15))))), np.sin(div(log(np.tan(log2(X14))), log2(div(np.subtract(X28, X24), np.tan(X21))))))), X29)), max(X16, sqrt(log(np.subtract(X9, X1))))), np.add(sqrt(X15), np.subtract(np.subtract(np.add(np.cos(X12), sqrt(X16)), np.sin(X28)), X13)))), np.add(sqrt(log2(div(X28, X10))), np.cos(X14)))))), np.add(sqrt(log2(div(X28, X10))), np.subtract(np.subtract(log2(X28), np.sin(CubeRoot(X28))), log(X0))))',
'np.add(np.add(sqrt(np.subtract(log2(X18), log(max(X16, X21)))), np.add(log10(min(div(-67.182, X12), np.multiply(X9, X15))), np.add(div(np.cos(X28), X29), np.add(div(min(-159.249, sqrt(np.subtract(min(sqrt(div(np.subtract(X12, X4), np.cos(X6))), CubeRoot(X13)), log(X0)))), X29), log2(np.abs(min(np.subtract(X14, X2), X28))))))), np.add(np.abs(X28), np.add(np.add(np.add(sqrt(np.subtract(log2(X18), log(max(X16, X21)))), np.add(np.cos(X16), np.add(div(np.cos(X28), X29), np.add(div(min(-159.249, CubeRoot(np.cos(log10(np.add(-247.049, X15))))), X29), log2(np.abs(min(np.subtract(X14, X2), X28))))))), np.add(np.abs(log2(X9)), np.add(div(min(-159.249, np.cos(X10)), X29), log2(np.abs(min(np.subtract(X15, X9), X28)))))), np.add(np.add(np.add(sqrt(np.subtract(log2(X18), log(np.multiply(X25, X8)))), np.add(np.cos(X16), np.add(div(np.cos(X28), X29), np.add(div(min(-159.249, CubeRoot(np.cos(log10(np.add(-247.049, X15))))), X29), log2(np.abs(min(np.subtract(X14, X2), X28))))))), np.add(np.abs(log2(X9)), np.add(div(min(-159.249, np.cos(X10)), X29), log2(np.abs(min(np.subtract(X15, X9), X28)))))), log2(np.abs(min(np.subtract(X15, X9), X28)))))))'





]                                                                                                                                                                                                                                                                                                                          


PowerTransformer_raw = [###############################################################################################################
# Power Transformer + ADASYN CLASS 2 
###############################################################################################################
'np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(log2(X4), np.subtract(X16, X25)), X28), X29), CubeRoot(X28)), X28), max(X28, np.multiply(max(np.cos(X20), max(np.cos(X3), 510.109)), CubeRoot(min(X29, np.abs(X13)))))), X28), X29), CubeRoot(X8)), X28), X29), CubeRoot(X28)), X28), max(X28, np.multiply(max(np.cos(X20), max(np.cos(X3), 510.109)), CubeRoot(min(X29, np.abs(X13)))))), X28), X29), CubeRoot(X28)), X28), X29), X28), X28), X29)',
'np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(log2(np.subtract(np.multiply(max(sqrt(X16), CubeRoot(X3)), CubeRoot(X28)), CubeRoot(np.abs(X14)))), X29), max(X29, X28)), X29), X22), log(X28)), max(X29, X28)), X29), CubeRoot(X28)), max(X29, X28)), max(X29, X28)), X29), CubeRoot(X28))',
'np.subtract(np.add(np.subtract(np.add(np.subtract(np.subtract(np.add(np.subtract(np.add(np.subtract(np.subtract(np.add(np.subtract(CubeRoot(np.add(np.add(np.add(np.subtract(CubeRoot(np.subtract(X4, X28)), X28), np.multiply(X28, X29)), np.sin(X28)), log10(X7))), X28), np.multiply(X28, X29)), X28), X28), np.multiply(X28, X29)), np.subtract(X29, np.multiply(X18, X5))), np.subtract(np.add(np.subtract(np.add(np.subtract(np.subtract(np.add(np.subtract(CubeRoot(np.add(np.add(np.add(np.subtract(CubeRoot(X4), X28), np.multiply(X28, X29)), np.sin(sqrt(X5))), log10(X7))), np.add(np.abs(np.multiply(X26, X6)), X29)), np.multiply(X28, X29)), X28), X28), np.subtract(X27, X11)), X28), np.multiply(X28, X29)), X28)), X28), X28), np.multiply(X28, X29)), np.subtract(X29, np.multiply(X18, X5))), np.subtract(np.add(np.subtract(np.add(np.subtract(np.subtract(np.add(np.subtract(CubeRoot(np.add(np.add(np.add(np.subtract(CubeRoot(X4), X28), np.multiply(X28, X29)), np.sin(sqrt(X5))), log10(X7))), np.add(np.abs(sqrt(X14)), X29)), np.multiply(X28, X29)), X28), X28), np.subtract(X27, X11)), X28), np.multiply(X28, X29)), X28)), X28)',
'np.add(div(np.subtract(np.multiply(X29, np.subtract(X10, 67.213)), X29), np.add(np.subtract(np.add(min(np.subtract(CubeRoot(CubeRoot(np.subtract(div(X2, X19), np.subtract(X28, np.tan(X29))))), X27), sqrt(517.038)), CubeRoot(CubeRoot(np.subtract(np.cos(X28), np.subtract(X28, X29))))), CubeRoot(X28)), CubeRoot(CubeRoot(np.subtract(np.cos(X28), np.subtract(X28, np.tan(log(X29)))))))), X4)',
'np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.multiply(CubeRoot(np.sin(X28)), np.subtract(X29, np.cos(X19))), np.subtract(X29, X19)), X28), np.subtract(CubeRoot(X22), np.subtract(np.subtract(np.subtract(np.subtract(log(X4), X28), np.subtract(X29, X19)), X28), np.subtract(X29, np.multiply(CubeRoot(np.sin(X28)), np.subtract(X29, np.subtract(max(X19, X27), X29))))))), X28), np.subtract(CubeRoot(X22), np.subtract(np.subtract(np.subtract(np.subtract(log(X4), X28), np.subtract(X29, X19)), X28), np.subtract(X29, np.multiply(CubeRoot(np.sin(X28)), np.subtract(X29, np.subtract(max(X19, X27), X29))))))), X28), np.subtract(CubeRoot(X28), np.subtract(np.subtract(log(X4), log10(X28)), np.subtract(X29, X19))))',




###############################################################################################################
# Power Transformer + Borderline SMOTE Class 2 
###############################################################################################################
'np.subtract(np.subtract(np.subtract(np.multiply(np.subtract(np.subtract(np.subtract(np.multiply(np.subtract(log2(X19), X29), np.cos(np.add(X24, X19))), max(X29, X28)), X28), X29), log2(-275.791)), max(X29, X28)), X28), X28)',
'np.multiply(X28, np.subtract(sqrt(149.242), np.abs(np.subtract(np.cos(X28), np.abs(np.subtract(np.subtract(X29, log(X28)), np.abs(np.subtract(np.subtract(X29, log2(X28)), np.abs(np.subtract(np.subtract(X18, X23), np.abs(np.subtract(np.subtract(np.subtract(X29, np.abs(np.subtract(np.subtract(X29, X1), np.abs(np.subtract(X29, np.abs(np.subtract(np.subtract(np.subtract(X29, max(X14, np.subtract(min(X24, X21), np.multiply(X28, -122.572)))), np.abs(np.subtract(X29, np.abs(np.subtract(np.subtract(X28, div(CubeRoot(np.subtract(log(X27), np.abs(np.subtract(log2(X15), div(np.add(X2, np.add(X1, X5)), X28))))), log10(X29))), div(min(CubeRoot(X22), np.add(X5, CubeRoot(log10(X7)))), X28)))))), div(CubeRoot(X22), X28)))))))), np.abs(np.subtract(log(log(np.tan(X11))), np.abs(np.subtract(np.subtract(X29, div(CubeRoot(np.subtract(X11, np.abs(np.subtract(X10, div(np.add(X2, np.add(X1, X5)), X28))))), log10(X29))), div(min(CubeRoot(X22), np.add(X5, CubeRoot(X27))), X28)))))), div(CubeRoot(X22), X28)))))))))))))',
'np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(log10(X4), np.add(CubeRoot(max(CubeRoot(np.add(X29, max(X29, X28))), log10(X28))), max(X29, X28))), X29), X29), X28), np.multiply(sqrt(X14), min(X19, X19))), np.add(CubeRoot(max(CubeRoot(np.subtract(CubeRoot(X29), sqrt(X18))), X28)), max(X29, X28))), X29), X29), X28), X28), X28), X28), np.multiply(sqrt(X14), min(X19, X19))), np.add(CubeRoot(max(min(X29, X29), X28)), max(X29, X28))), X29), X29), X28), X28), X28)',
'np.subtract(np.subtract(log2(np.multiply(CubeRoot(X16), max(np.subtract(X23, np.add(X11, np.multiply(div(np.sin(np.abs(X6)), log(max(X18, log10(X29)))), np.subtract(X28, sqrt(max(np.subtract(CubeRoot(X14), np.add(X11, np.multiply(713.865, np.multiply(max(np.subtract(X23, np.add(X11, np.multiply(div(np.sin(np.abs(X6)), log(max(X18, log10(X29)))), np.subtract(X28, sqrt(max(np.subtract(np.add(X5, X26), np.add(X11, np.multiply(max(713.865, X15), np.multiply(np.tan(div(min(X9, X28), X18)), np.subtract(X28, np.subtract(np.add(X5, X26), np.add(X11, np.multiply(div(log(705.130), sqrt(log2(min(X17, X29)))), np.subtract(X28, np.cos(X26)))))))))), CubeRoot(X17))))))), np.cos(np.tan(div(X2, X18)))), np.subtract(X28, np.subtract(np.add(X5, X26), np.add(X11, np.multiply(div(log(705.130), sqrt(log2(min(X17, X29)))), np.subtract(X28, np.cos(X26)))))))))), CubeRoot(X17))))))), np.cos(np.tan(div(X2, X18)))))), np.cos(X21)), X28)',
'np.subtract(np.subtract(np.multiply(sqrt(np.add(897.097, X3)), CubeRoot(np.subtract(np.subtract(np.subtract(X17, X29), X28), np.sin(min(np.add(np.abs(np.abs(log10(log(max(X28, X10))))), min(max(np.sin(np.sin(X0)), log10(log(X29))), np.add(np.sin(X7), sqrt(log2(X23))))), np.cos(CubeRoot(log(max(CubeRoot(-379.518), div(X1, X27)))))))))), X29), X28)',



###############################################################################################################
# Power Transformer + SMTOE Class 2 
###############################################################################################################
'np.add(np.add(np.add(np.add(div(X28, X29), X26), np.add(np.add(np.add(np.add(np.add(np.add(np.abs(np.subtract(log(log10(X7)), log10(log2(X17)))), np.add(np.add(np.add(div(X28, X29), X26), np.subtract(div(X28, X29), np.add(X29, sqrt(np.add(np.subtract(np.add(np.add(X9, X5), X29), log(X5)), np.sin(X26)))))), np.subtract(div(X28, X29), X28))), X26), np.subtract(div(X28, X29), np.add(X29, np.abs(X10)))), np.subtract(div(X28, X29), np.add(X29, sqrt(np.add(np.subtract(np.add(X14, X29), log(np.cos(np.tan(log2(X24))))), np.sin(X26)))))), np.subtract(div(X28, X29), X28)), np.subtract(div(X28, X29), X28))), X26), np.add(np.add(np.add(div(X28, X29), X26), np.subtract(div(X28, X29), np.add(X29, sqrt(np.add(np.subtract(np.add(X14, X29), log(X5)), np.add(log2(X18), np.sin(X26))))))), np.subtract(div(X28, X29), X28)))',
'np.subtract(np.subtract(np.subtract(X26, np.subtract(max(np.sin(CubeRoot(X29)), X28), np.subtract(np.subtract(X26, np.subtract(np.subtract(max(np.sin(X29), X28), np.subtract(np.subtract(np.subtract(np.subtract(X26, np.subtract(max(np.sin(CubeRoot(X29)), X28), np.subtract(np.subtract(X26, np.subtract(np.subtract(max(np.sin(X29), X28), np.subtract(np.subtract(X26, np.subtract(np.subtract(np.subtract(max(np.sin(min(log2(X29), sqrt(X2))), X28), np.subtract(np.subtract(X26, np.subtract(max(np.sin(min(log2(X29), np.tan(div(X24, log10(X18))))), X28), log10(max(sqrt(X7), np.abs(np.add(np.cos(np.abs(-75.226)), np.multiply(div(sqrt(CubeRoot(X22)), X28), div(X7, log(np.cos(min(X26, X1))))))))))), max(X27, X29))), log10(max(sqrt(X21), np.abs(np.add(np.cos(np.abs(-75.226)), np.multiply(div(X7, X28), sqrt(np.subtract(X16, np.multiply(215.213, X6))))))))), log10(div(sqrt(X17), CubeRoot(X11))))), max(X27, X29))), log10(max(sqrt(X21), np.abs(np.add(np.cos(min(X0, X8)), np.multiply(div(X7, X28), div(X7, log(np.cos(min(X26, X1))))))))))), max(X27, X29)))), max(X27, X29)), CubeRoot(np.subtract(max(np.sin(np.sin(X29)), X28), np.subtract(np.subtract(X26, np.subtract(max(np.sin(min(log2(X29), np.tan(div(X24, log10(X18))))), X28), sqrt(X6))), max(X27, X29))))), max(X27, X29))), log10(max(sqrt(X21), np.abs(np.add(np.cos(np.sin(X28)), np.multiply(div(X7, X28), div(np.subtract(np.abs(X20), log2(X28)), log(np.cos(min(X26, X1))))))))))), max(X27, X29)))), max(X27, X29)), CubeRoot(np.subtract(max(np.sin(np.sin(X29)), X28), np.subtract(np.subtract(X26, np.subtract(max(np.sin(min(log2(X29), np.tan(div(X24, log10(X18))))), X28), sqrt(X6))), max(X27, X29)))))',
'np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(log2(np.cos(X29)), X28), X28), np.add(np.add(np.add(np.add(np.abs(min(np.abs(np.cos(X8)), X28)), np.add(X29, X28)), np.add(X29, X28)), np.add(np.add(np.add(np.add(np.abs(min(max(X13, X4), X28)), np.add(X29, X28)), np.add(np.abs(min(X18, X28)), np.add(X29, X28))), np.add(X29, X28)), np.add(X29, X28))), np.add(X29, X28))), X28), np.add(np.abs(min(X18, X28)), np.abs(X28))), CubeRoot(np.add(log(X28), np.add(X29, X28))))',
'np.add(np.subtract(np.subtract(np.add(np.subtract(np.subtract(np.subtract(np.subtract(np.add(np.subtract(np.subtract(np.subtract(np.subtract(log2(sqrt(np.subtract(np.subtract(np.subtract(div(X18, X18), X29), X28), X28))), X29), X29), X29), X28), np.subtract(np.subtract(log2(sqrt(log10(np.tan(min(np.cos(max(log(X6), log(min(X9, min(min(X5, CubeRoot(X28)), X28))))), np.abs(div(log2(np.tan(np.sin(np.multiply(X4, X25)))), np.subtract(np.add(log(np.tan(np.abs(np.tan(X22)))), np.cos(np.tan(np.add(log10(X19), log10(X4))))), np.multiply(np.abs(log(X5)), CubeRoot(min(X24, X5))))))))))), X29), X28)), X28), X29), X29), X28), np.subtract(np.subtract(log2(sqrt(log10(np.tan(min(np.cos(max(log(X6), log(np.subtract(np.subtract(np.subtract(np.cos(X29), X29), X28), X28)))), np.abs(div(log2(np.tan(np.sin(np.multiply(X4, X25)))), np.subtract(np.add(log(np.tan(np.abs(np.tan(X22)))), np.cos(np.tan(np.add(log10(X19), log10(X4))))), np.multiply(np.abs(log(X5)), CubeRoot(min(X24, X5))))))))))), X29), X28)), X28), X28), np.subtract(np.subtract(log2(sqrt(log10(np.tan(min(np.cos(max(log2(sqrt(np.sin(np.tan(sqrt(X5))))), log(min(X9, min(min(X5, np.subtract(div(X13, X6), log(X0))), X28))))), np.abs(div(X28, np.subtract(np.multiply(X9, X27), log2(X26))))))))), X29), X28))',
'np.add(np.multiply(X28, X6), np.add(np.add(np.add(CubeRoot(np.multiply(X29, X28)), np.add(np.add(CubeRoot(np.multiply(X29, X28)), np.add(np.cos(X26), np.add(np.add(CubeRoot(np.multiply(X29, X28)), np.add(CubeRoot(np.multiply(X29, log2(X27))), np.add(np.multiply(X29, X28), X26))), np.add(CubeRoot(np.add(np.add(CubeRoot(np.multiply(X29, X28)), np.multiply(X29, log2(X27))), X26)), CubeRoot(min(X26, log10(np.tan(log10(X28))))))))), np.add(CubeRoot(np.add(np.add(CubeRoot(np.multiply(X29, X28)), np.add(np.multiply(X29, X28), X26)), X26)), CubeRoot(min(X26, log10(div(log(X0), np.abs(X27)))))))), np.add(CubeRoot(np.multiply(X29, log2(X27))), np.add(np.add(np.add(CubeRoot(np.multiply(X29, X28)), np.add(np.add(CubeRoot(np.multiply(X29, X28)), np.add(CubeRoot(np.multiply(X29, X28)), np.add(np.add(CubeRoot(np.multiply(X29, X28)), np.add(CubeRoot(np.multiply(X29, log2(X27))), np.add(np.multiply(X29, X28), X26))), np.add(CubeRoot(np.add(np.add(CubeRoot(np.multiply(X29, X28)), np.multiply(X29, log2(X27))), X26)), CubeRoot(min(X26, log(log2(X28)))))))), np.add(CubeRoot(np.add(np.add(CubeRoot(np.add(np.tan(X25), div(X28, X17))), np.add(np.multiply(X29, X28), X26)), X26)), CubeRoot(min(X26, log10(div(log(X0), np.abs(X27)))))))), np.add(CubeRoot(np.multiply(X29, log2(X27))), np.add(np.multiply(X29, X28), X26))), np.add(CubeRoot(np.add(np.add(X25, np.add(np.multiply(min(min(X11, X22), np.subtract(np.tan(-167.773), np.tan(X15))), X28), X26)), X26)), log10(X4))))), np.add(CubeRoot(np.add(np.add(CubeRoot(np.multiply(X29, X28)), np.add(np.multiply(min(min(X11, X22), np.subtract(np.tan(-167.773), np.tan(X15))), X28), X26)), X26)), log10(X4))))',



###############################################################################################################
# Power Transformer + SVMSMOTE Class 2 
###############################################################################################################
'np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(CubeRoot(X4), X28), sqrt(X2)), X28), X29), X29), X28), X28), X29), X29), X28), X29), X28), X29), np.cos(X14)), X28), X29), X29), X28), X28), X29), X29), X28), X29), X28), X29), sqrt(log(np.tan(X25)))), X28), X29), X29), X28), sqrt(np.sin(X23))), np.cos(X29)), X28), X29)',
'np.subtract(np.subtract(np.add(np.subtract(np.subtract(np.subtract(log10(log(X14)), max(X29, np.subtract(-57.027, X16))), max(X29, np.subtract(-57.027, X16))), X28), np.subtract(np.subtract(np.add(np.subtract(np.subtract(np.add(np.subtract(np.subtract(np.sin(X3), min(X29, X2)), X28), X0), max(X29, np.subtract(-57.027, X16))), X28), np.subtract(np.subtract(np.subtract(np.add(np.subtract(np.subtract(np.subtract(np.add(np.subtract(np.subtract(np.subtract(np.add(np.subtract(log(X21), X28), log10(X4)), max(X29, np.subtract(-57.027, X16))), max(X29, np.multiply(X28, X21))), X28), np.subtract(np.subtract(np.add(np.subtract(np.subtract(np.add(np.subtract(np.subtract(np.sin(X3), min(X29, X2)), max(X6, X13)), log10(X4)), max(X29, np.subtract(-57.027, X16))), X28), np.subtract(np.subtract(np.add(np.subtract(np.subtract(CubeRoot(X12), min(X20, X8)), X28), log10(X4)), max(X29, log10(X20))), X28)), max(X29, log10(X20))), X28)), max(X29, log10(X20))), max(X29, np.subtract(-57.027, X16))), X28), np.subtract(np.subtract(np.add(np.subtract(np.subtract(np.add(np.subtract(np.subtract(np.sin(X3), min(X29, X2)), max(X6, X13)), log10(X4)), max(X29, np.subtract(-57.027, X16))), X28), np.subtract(np.subtract(np.add(np.subtract(np.subtract(CubeRoot(X12), min(X20, X8)), X28), log10(X4)), max(X29, np.add(X1, X0))), X28)), max(X29, log10(X20))), X28)), max(X29, log10(X20))), X28), X28)), max(X29, log10(X20))), X28)), max(X29, log10(X20))), X28)',
'np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(min(np.subtract(np.subtract(np.subtract(log2(np.cos(np.tan(max(X19, X28)))), X29), sqrt(X5)), X29), X26), X29), X28), np.cos(X12)), X29), X29), X28), X28), X28), X28), X29), X29), np.cos(X12)), X29), X29), X28), X28), X28), X28), X29), X28), X29), X29), X28), X28), X29), X29), X28), X28), X29)',
'np.add(log10(div(np.add(np.sin(13.261), -67.769), X27)), min(np.subtract(np.subtract(min(np.subtract(np.subtract(np.add(X26, min(np.subtract(np.subtract(min(np.subtract(np.subtract(min(np.subtract(np.subtract(np.add(sqrt(X0), min(np.subtract(np.subtract(np.cos(np.sin(X28)), X29), sqrt(min(np.multiply(X28, -63.767), div(np.sin(X18), X3)))), np.subtract(np.subtract(np.add(X26, min(np.subtract(np.subtract(min(np.subtract(np.subtract(min(np.subtract(np.subtract(np.add(sqrt(X0), min(np.subtract(np.subtract(np.cos(np.sin(X28)), X29), sqrt(min(np.multiply(X28, -63.767), div(np.sin(X18), X3)))), np.tan(-227.932))), X29), sqrt(np.tan(X18))), np.tan(-227.932)), X29), X28), np.tan(-227.932)), X29), sqrt(min(np.multiply(X28, -63.767), max(X7, X29)))), np.tan(-227.932))), X29), log2(np.sin(CubeRoot(log2(X20))))))), X29), sqrt(np.tan(np.sin(X19)))), np.tan(-227.932)), X29), X28), np.tan(-227.932)), X29), sqrt(min(np.multiply(X28, -63.767), max(np.tan(X27), X29)))), np.tan(-227.932))), X29), log2(np.sin(CubeRoot(log2(X20))))), np.tan(-227.932)), X29), X22), np.tan(-227.932)))',
'np.subtract(np.add(np.subtract(np.add(log10(X25), np.add(np.subtract(np.add(X27, np.multiply(X28, X29)), X28), np.add(np.subtract(np.subtract(np.multiply(log2(X27), X29), X28), X28), CubeRoot(X12)))), X28), np.add(np.subtract(np.subtract(np.multiply(np.subtract(X18, np.cos(X7)), X29), X28), X28), np.add(log10(X25), np.add(np.subtract(np.multiply(X28, X29), X28), np.add(np.add(np.subtract(np.add(log10(X25), np.add(np.subtract(np.add(X27, np.multiply(X28, X29)), X28), np.add(np.subtract(np.add(np.subtract(np.add(log10(X25), np.add(np.subtract(np.add(X27, np.multiply(X28, X29)), X28), np.add(np.subtract(np.subtract(np.multiply(log2(X27), X29), X28), X28), CubeRoot(X12)))), X28), np.add(np.subtract(np.subtract(np.multiply(np.subtract(X18, np.cos(X7)), X29), X28), X28), np.add(log10(X2), np.add(np.subtract(np.add(log2(X18), np.multiply(X28, X29)), X28), np.add(np.subtract(np.subtract(np.multiply(np.subtract(X18, sqrt(CubeRoot(-65.045))), X29), X28), X28), CubeRoot(X12)))))), X28), np.cos(X29)))), X28), np.add(np.subtract(np.subtract(np.multiply(np.subtract(X18, np.cos(X7)), X29), X28), X28), np.add(log10(X25), np.add(np.subtract(np.add(log2(X18), np.multiply(X28, X29)), X28), np.add(np.subtract(np.subtract(np.multiply(np.subtract(X18, sqrt(CubeRoot(-65.045))), X29), X28), X28), CubeRoot(X12)))))), CubeRoot(X12)))))), X6)'



 ]
                                                                                                                                                                                                                                                                                                                          
Normalizer_raw = [###############################################################################################################
# Normalizer + ADASYN CLASS 2 
###############################################################################################################
'np.add(sqrt(div(log2(sqrt(np.add(X29, X28))), np.multiply(X18, X25))), CubeRoot(-714.594))',
'log2(min(div(X25, np.multiply(-765.043, X25)), log2(sqrt(np.multiply(-9.630, np.subtract(np.multiply(X9, X28), log(CubeRoot(X29))))))))',
'log2(log2(np.sin(np.multiply(div(np.multiply(X19, np.tan(X19)), np.multiply(log2(min(min(np.add(X8, X11), CubeRoot(sqrt(min(log(X27), np.subtract(X10, X5))))), sqrt(X28))), sqrt(-223.975))), log(np.add(sqrt(log2(40.152)), log2(log(-620.476))))))))',
'CubeRoot(div(np.multiply(np.multiply(np.add(np.abs(np.subtract(np.add(X14, X3), np.subtract(X2, -881.596))), np.add(np.cos(div(np.subtract(np.add(CubeRoot(np.abs(X1)), log2(X3)), max(log2(np.cos(log10(X2))), np.subtract(-631.282, X21))), np.add(np.subtract(log2(X27), np.cos(X24)), np.cos(np.sin(296.042))))), np.abs(div(CubeRoot(np.subtract(np.add(X14, X3), np.subtract(X2, -881.596))), np.tan(np.add(X10, X12)))))), np.subtract(log10(X19), log10(CubeRoot(X28)))), np.cos(X27)), min(np.abs(np.tan(log10(CubeRoot(min(log(sqrt(X25)), np.subtract(np.add(X13, X24), log2(X28))))))), min(max(np.subtract(log(np.cos(X16)), np.cos(X12)), np.add(np.abs(X21), log(sqrt(np.tan(X29))))), np.abs(np.cos(sqrt(X10)))))))',
'log2(np.multiply(div(log2(np.multiply(div(-318.459, div(np.subtract(X14, np.add(X28, X10)), X24)), min(np.subtract(X11, div(-710.839, X10)), CubeRoot(CubeRoot(X21))))), div(log(sqrt(X29)), X10)), np.subtract(np.subtract(X13, np.abs(div(div(X28, X10), X10))), np.abs(div(div(X28, X10), X10)))))',




###############################################################################################################
# Normalizer + Borderline SMOTE Class 2 
###############################################################################################################
'div(np.abs(np.add(185.249, X7)), np.subtract(np.cos(log10(np.sin(np.abs(np.abs(max(sqrt(max(log10(X14), CubeRoot(X29))), log(np.multiply(np.cos(X16), np.subtract(max(log10(X0), div(div(X8, np.tan(np.sin(np.subtract(max(log2(X23), sqrt(X28)), np.tan(np.multiply(X15, log(X7))))))), CubeRoot(X21))), np.abs(log(np.add(sqrt(X18), np.sin(X21))))))))))))), np.cos(np.sin(min(np.cos(np.cos(min(np.cos(X6), min(X9, X24)))), sqrt(np.abs(sqrt(np.tan(X28)))))))))',
'log2(np.tan(CubeRoot(sqrt(div(div(np.multiply(np.multiply(X12, X25), X26), div(div(X29, sqrt(div(div(np.multiply(np.multiply(X12, X25), X26), div(div(X29, CubeRoot(X28)), X25)), log(np.cos(198.287))))), X25)), log(np.cos(198.287)))))))',
'np.subtract(log2(np.multiply(log2(CubeRoot(np.multiply(X28, X0))), log2(np.cos(div(np.tan(194.859), log2(div(sqrt(X29), X21))))))), np.add(log2(CubeRoot(np.multiply(X25, np.multiply(X28, X11)))), np.abs(5.460)))',
'np.tan(np.add(np.tan(np.multiply(CubeRoot(np.subtract(CubeRoot(X28), np.subtract(sqrt(X25), X19))), CubeRoot(CubeRoot(np.subtract(np.tan(X29), log(CubeRoot(log10(CubeRoot(CubeRoot(X29)))))))))), div(np.sin(np.add(np.multiply(CubeRoot(CubeRoot(div(np.subtract(np.sin(np.cos(CubeRoot(log2(np.abs(sqrt(X29)))))), log2(X18)), sqrt(np.subtract(X15, X3))))), CubeRoot(CubeRoot(np.subtract(log2(np.cos(X5)), np.subtract(X16, X1))))), sqrt(CubeRoot(np.multiply(CubeRoot(X28), CubeRoot(X15)))))), np.cos(sqrt(np.sin(div(log(log2(min(X28, 121.913))), X7)))))))',
'np.multiply(np.add(log10(sqrt(X29)), np.cos(X0)), np.multiply(max(np.add(log2(X17), np.abs(min(71.012, log(np.multiply(X16, log(sqrt(X28))))))), log2(CubeRoot(X27))), np.add(X0, 120.272)))',



###############################################################################################################
# Normalizer + SMTOE Class 2 
###############################################################################################################
'log2(np.multiply(sqrt(min(min(CubeRoot(log(sqrt(np.subtract(np.subtract(np.sin(X0), X1), np.cos(X2))))), min(div(np.subtract(X3, np.abs(453.456)), sqrt(np.add(X29, X28))), div(X17, X3))), np.multiply(X29, sqrt(X9)))), np.multiply(np.add(log2(X28), log2(X19)), np.tan(max(np.sin(sqrt(div(X20, 554.137))), np.abs(np.sin(log10(CubeRoot(np.multiply(X2, sqrt(X28)))))))))))',
'log2(div(np.add(X10, div(sqrt(X28), max(X5, log2(max(sqrt(log10(CubeRoot(X5))), np.abs(log2(sqrt(X29)))))))), max(np.add(X26, X11), log2(np.add(sqrt(log10(sqrt(np.add(np.multiply(X0, div(X16, log10(log2(X9)))), CubeRoot(X28))))), log2(sqrt(X29)))))))',
'log2(CubeRoot(min(np.subtract(X11, np.add(X16, X28)), min(min(np.tan(np.add(max(X20, np.subtract(log(X1), log10(X10))), CubeRoot(log(np.subtract(np.add(np.multiply(np.multiply(np.add(sqrt(log2(X19)), np.abs(log2(np.subtract(log10(log(X22)), max(X18, X2))))), min(log10(X0), np.multiply(sqrt(sqrt(div(X15, X22))), log(X5)))), CubeRoot(np.tan(CubeRoot(np.multiply(X14, X9))))), div(X0, X5)), min(np.tan(np.add(max(X20, np.subtract(log(CubeRoot(X28)), log10(X19))), CubeRoot(log(np.subtract(X9, min(np.multiply(np.sin(log(X1)), div(X16, X19)), np.multiply(CubeRoot(X29), log(np.sin(div(X2, X6)))))))))), X29)))))), min(log(np.cos(X29)), div(14.213, np.add(X28, X29)))), sqrt(X25)))))',
'log2(np.multiply(np.multiply(div(CubeRoot(np.subtract(min(np.multiply(X12, X8), X17), X28)), log(np.tan(np.cos(div(np.add(log(sqrt(X28)), log(sqrt(np.multiply(sqrt(min(X2, X10)), X29)))), log(-382.349)))))), np.add(log(CubeRoot(log2(np.abs(max(np.cos(X28), np.abs(X20)))))), log2(sqrt(X27)))), np.add(log(log(np.sin(log(log(np.sin(np.add(np.sin(np.tan(-120.647)), div(X7, CubeRoot(X29))))))))), sqrt(log(sqrt(np.multiply(sqrt(X29), X0)))))))',
'np.tan(np.multiply(min(sqrt(min(np.subtract(log10(X15), div(max(div(np.subtract(X8, X16), np.tan(X10)), log(X3)), max(np.sin(log10(CubeRoot(log(X4)))), log10(X7)))), log(X23))), np.subtract(np.subtract(log10(X7), X21), np.tan(CubeRoot(div(log10(CubeRoot(X3)), CubeRoot(CubeRoot(X29))))))), np.multiply(np.tan(max(log2(CubeRoot(X28)), log10(max(np.sin(np.sin(X18)), log(log2(X7)))))), log2(min(log10(X11), log10(np.cos(np.cos(X3))))))))',



###############################################################################################################
# Normalizer + SVMSMOTE Class 2 
###############################################################################################################
'min(212.170, div(np.subtract(np.subtract(153.669, X6), log(X2)), np.subtract(log10(min(log2(sqrt(X28)), sqrt(max(X20, X9)))), div(np.subtract(X22, log(CubeRoot(X29))), np.cos(np.cos(-108.612))))))',
'log(np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(X8, X16), log10(CubeRoot(np.multiply(min(np.subtract(X8, X1), X12), X28)))), log10(CubeRoot(np.multiply(min(np.subtract(X8, X5), X12), np.subtract(X2, X5))))), log10(CubeRoot(np.multiply(min(np.subtract(X8, X1), X12), X28)))), log10(CubeRoot(np.multiply(min(np.subtract(X8, X1), X12), X28)))), log10(CubeRoot(np.multiply(min(np.subtract(X8, X1), X7), X28)))), log10(CubeRoot(np.multiply(min(np.subtract(X8, X1), X12), X28)))), log10(CubeRoot(np.multiply(min(np.subtract(X8, X5), X12), np.subtract(X2, X5))))), log10(CubeRoot(np.cos(sqrt(log2(X11)))))), log10(CubeRoot(np.multiply(min(np.subtract(X8, X5), X12), np.multiply(X18, X28))))), log10(CubeRoot(np.multiply(min(np.subtract(X8, X1), X12), X28)))), log10(CubeRoot(np.multiply(min(np.subtract(X8, X1), np.abs(X7)), X28)))), log10(CubeRoot(np.multiply(min(np.subtract(sqrt(X29), X5), X12), np.subtract(X2, X5))))), np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(X8, X16), log10(CubeRoot(np.multiply(min(np.subtract(X8, X1), X12), X28)))), log10(CubeRoot(np.multiply(min(np.subtract(X8, X1), X12), X28)))), log10(CubeRoot(np.multiply(min(np.subtract(X8, X1), X12), X28)))), log10(CubeRoot(np.multiply(min(np.subtract(X8, X1), X12), X28)))), log10(CubeRoot(np.multiply(min(np.subtract(X8, X1), X12), X28)))), log10(CubeRoot(np.multiply(min(np.subtract(X8, X1), X12), X28)))), log10(CubeRoot(np.multiply(min(np.subtract(X8, X5), X12), np.subtract(X2, X5)))))), log10(CubeRoot(np.multiply(min(np.subtract(X8, X1), X12), np.sin(np.multiply(np.subtract(X5, X22), X28)))))))',
'log(div(div(div(div(X23, X2), np.subtract(log2(sqrt(X29)), div(np.tan(np.subtract(X17, np.sin(X1))), 160.307))), np.subtract(log2(sqrt(X29)), sqrt(X28))), np.subtract(-13.806, sqrt(div(362.544, X2)))))',
'log(np.tan(sqrt(max(max(np.abs(log2(np.abs(min(div(sqrt(X29), np.add(np.multiply(log10(log(np.cos(X19))), log2(CubeRoot(X28))), np.multiply(CubeRoot(np.multiply(log10(X26), X15)), X29))), np.sin(min(X9, sqrt(np.subtract(X9, np.abs(X11))))))))), np.abs(min(div(X29, sqrt(X28)), X27))), sqrt(log(X9))))))',
'np.subtract(div(div(div(log(log10(X20)), np.tan(sqrt(X28))), log(np.abs(CubeRoot(np.add(np.tan(X11), np.cos(X18)))))), np.cos(min(log(CubeRoot(X29)), np.multiply(log10(div(min(np.multiply(np.multiply(X28, X11), X13), X28), X19)), X20)))), np.tan(div(X11, X5)))'

]                                                                                                                                                                                                                                                                                                                          
                                                                                                                                                                                                                                                                                                                          
                                                                                                                                                                                                                                                                                                                          
MaxAbsScaler_Raw = [###############################################################################################################
# MaxAbsScaler + ADASYN CLASS 2 
###############################################################################################################
# Nema Dataseta pa nema ni rezultata 




###############################################################################################################
# MaxAbsScaler + Borderline SMOTE Class 2 
###############################################################################################################
'np.multiply(np.cos(np.multiply(sqrt(np.add(np.sin(np.subtract(np.add(X9, -33.764), np.cos(CubeRoot(X22)))), np.multiply(np.add(X19, X24), CubeRoot(np.subtract(X0, X26))))), log(div(div(log10(X4), CubeRoot(X29)), np.tan(X28))))), np.multiply(sqrt(min(X9, -444.703)), log(log(X18))))',
'div(log2(np.subtract(np.abs(max(X22, CubeRoot(np.abs(sqrt(sqrt(CubeRoot(log10(log(CubeRoot(np.sin(X18))))))))))), div(np.add(-644.757, X21), np.sin(sqrt(X29))))), np.add(log10(log(CubeRoot(np.cos(CubeRoot(np.tan(np.abs(X28))))))), div(X13, X10)))',
'div(div(CubeRoot(CubeRoot(np.add(np.sin(sqrt(np.add(np.multiply(X11, X29), X28))), CubeRoot(np.multiply(np.tan(CubeRoot(CubeRoot(max(X29, np.multiply(sqrt(sqrt(X17)), np.add(log2(X28), np.cos(X14))))))), np.subtract(log10(X16), np.subtract(np.abs(-36.730), X5))))))), max(np.multiply(np.cos(CubeRoot(X6)), np.tan(log10(div(sqrt(min(X13, X19)), CubeRoot(np.multiply(X19, X29)))))), X23)), np.subtract(max(X24, X22), np.sin(X22)))',
'log2(np.subtract(max(CubeRoot(np.add(log2(log2(X28)), CubeRoot(X18))), np.subtract(X4, log(np.add(X29, np.subtract(X6, X3))))), sqrt(div(np.subtract(log2(sqrt(sqrt(np.cos(div(np.subtract(X19, X26), np.sin(X27)))))), np.add(X29, sqrt(np.subtract(X24, X14)))), X29))))',
'log2(CubeRoot(np.multiply(div(np.add(min(log(X29), div(np.multiply(div(div(257.531, X26), X26), div(X28, X29)), X28)), X4), np.add(X2, X5)), div(np.multiply(X4, X1), CubeRoot(X29)))))',



###############################################################################################################
# MaxAbsScaler + SMTOE Class 2 
###############################################################################################################
'np.add(log2(log(CubeRoot(min(np.cos(128.918), div(400.275, X28))))), np.subtract(np.subtract(div(-361.829, X29), log(np.multiply(log10(np.sin(X22)), sqrt(np.multiply(sqrt(X28), div(X19, -138.550)))))), log(np.multiply(log10(np.sin(np.sin(np.cos(X4)))), sqrt(np.multiply(sqrt(X28), div(X19, -138.550)))))))',
'div(-568.989, CubeRoot(max(np.subtract(log10(X2), log(X29)), div(np.cos(np.tan(np.cos(np.multiply(CubeRoot(X6), np.sin(X20))))), X28))))',
'np.multiply(np.multiply(log2(np.abs(np.add(log2(np.subtract(X27, np.tan(X26))), div(X1, div(np.sin(div(np.tan(X12), np.abs(np.subtract(CubeRoot(div(min(div(np.sin(X28), np.add(X11, X9)), log(X7)), np.add(max(max(X7, div(np.add(X25, X25), div(CubeRoot(CubeRoot(np.sin(div(log10(X12), sqrt(X12))))), min(X14, np.add(X3, log2(X29)))))), np.add(np.subtract(CubeRoot(div(CubeRoot(np.multiply(X20, np.tan(log10(CubeRoot(min(min(log10(sqrt(X0)), log10(np.multiply(X7, X26))), np.multiply(CubeRoot(max(X15, X29)), np.abs(np.add(X7, X3))))))))), X8)), max(X18, np.multiply(np.tan(X22), X9))), log(X17))), div(X12, -936.599)))), log10(X26))))), np.add(np.multiply(np.multiply(X3, div(X21, X9)), X26), np.multiply(X28, X10))))))), np.cos(np.tan(CubeRoot(log(log(log2(np.cos(np.abs(X29))))))))), np.tan(X22))',
'np.add(div(-35.462, X29), log2(np.add(min(X3, X12), np.subtract(np.add(min(CubeRoot(X4), X12), min(np.subtract(div(log(log10(np.cos(CubeRoot(X28)))), CubeRoot(min(X4, X7))), CubeRoot(X4)), sqrt(X26))), np.multiply(np.sin(X22), np.tan(np.sin(np.tan(log(X4)))))))))',
'np.add(np.subtract(log2(X28), CubeRoot(div(X22, X0))), div(log10(min(log(sqrt(max(np.cos(X10), sqrt(X11)))), max(log2(X26), div(X17, X28)))), np.cos(max(min(np.multiply(CubeRoot(X6), X28), np.subtract(X18, X9)), sqrt(np.multiply(sqrt(log10(np.subtract(X22, np.multiply(div(np.abs(np.add(X24, -646.447)), X17), np.subtract(X23, -624.941))))), np.cos(min(np.add(div(X29, X28), np.tan(X17)), np.multiply(X0, X22)))))))))',



###############################################################################################################
# MaxAbsScaler + SVMSMOTE Class 2 
###############################################################################################################
'np.multiply(np.add(log2(sqrt(np.sin(X12))), np.add(div(np.add(div(np.cos(X17), log(sqrt(CubeRoot(X21)))), log10(X1)), div(div(X1, X28), CubeRoot(X28))), min(X28, log2(X28)))), np.add(log10(min(np.sin(X28), CubeRoot(CubeRoot(X26)))), sqrt(div(X29, X28))))',
'np.add(min(np.multiply(np.abs(log2(np.abs(686.740))), log2(CubeRoot(np.multiply(min(CubeRoot(X29), X9), log10(X22))))), np.multiply(log(log10(np.cos(log2(CubeRoot(np.cos(np.cos(X18))))))), log2(np.subtract(np.subtract(np.cos(X29), CubeRoot(log10(min(div(max(X28, X29), np.tan(X28)), sqrt(np.tan(X27)))))), np.tan(log10(X15)))))), max(log2(div(np.subtract(np.multiply(740.155, X20), min(X1, X14)), min(np.sin(X6), sqrt(X28)))), log10(X1)))',
'np.multiply(np.subtract(div(824.200, log2(np.cos(min(X14, log10(log(X1)))))), 776.823), np.add(X28, max(div(np.sin(np.multiply(X11, X17)), div(X28, X6)), CubeRoot(CubeRoot(X29)))))',
'div(CubeRoot(np.add(np.multiply(X28, np.tan(CubeRoot(log10(711.069)))), max(X29, X27))), min(np.sin(log(np.cos(779.167))), np.subtract(div(X1, X17), CubeRoot(div(log10(sqrt(X12)), max(np.cos(np.abs(X14)), np.add(log10(X10), np.cos(X3))))))))',
'log2(min(np.add(log2(np.multiply(div(np.cos(X3), log2(X26)), X6)), np.add(np.add(log2(np.multiply(div(np.cos(X3), log2(X3)), X6)), np.add(log2(np.multiply(log10(np.tan(CubeRoot(X28))), X26)), log(np.abs(X3)))), np.abs(div(div(X29, np.multiply(log10(CubeRoot(X28)), X26)), X3)))), div(X2, np.multiply(559.187, X15))))',
]   
                                                                                                                                                                                                                                                                                                                          
MinMaxScaler_raw = [###############################################################################################################
# MinMaxScaler + ADASYN CLASS 2 
###############################################################################################################
'np.add(max(np.subtract(np.tan(X11), log2(log(X28))), X8), min(log2(np.subtract(np.subtract(np.subtract(np.subtract(X3, X1), log2(log(X28))), log2(log(X28))), log2(np.sin(X4)))), np.add(div(np.add(np.cos(X8), -185.552), np.tan(CubeRoot(np.tan(sqrt(X29))))), min(log2(np.subtract(CubeRoot(CubeRoot(X13)), div(139.332, X26))), log(np.subtract(np.subtract(np.subtract(np.subtract(X3, X1), log2(log(X28))), log2(np.abs(X29))), log2(np.sin(X4))))))))',
'np.subtract(div(-430.173, X29), CubeRoot(np.multiply(np.abs(-383.661), np.add(np.abs(div(np.multiply(min(div(X25, X20), np.subtract(X26, sqrt(-252.006))), np.tan(div(np.multiply(log10(max(X20, np.tan(X0))), np.sin(np.multiply(X21, X12))), max(CubeRoot(log2(X22)), np.multiply(log2(log(X28)), sqrt(CubeRoot(X26))))))), np.add(np.abs(log(np.cos(X2))), np.tan(log10(max(X22, X19)))))), log2(X26)))))',
'log2(min(np.add(div(div(-563.099, X29), log(X28)), div(165.531, log(max(X12, X28)))), div(np.cos(X20), -133.171)))',
'log2(np.subtract(log10(np.sin(np.subtract(np.multiply(log2(np.multiply(X4, X18)), log(log10(X22))), np.abs(CubeRoot(-470.391))))), np.multiply(div(log2(X7), sqrt(X29)), np.multiply(np.subtract(-236.815, log10(X3)), log2(sqrt(log2(X28)))))))',
'div(log2(max(max(div(log2(log2(X6)), CubeRoot(np.subtract(X0, X17))), div(X28, np.abs(min(log10(log(log10(np.abs(min(np.sin(np.add(X1, X27)), log10(log10(X12))))))), -491.163)))), log(X17))), div(X29, log(log(log2(X28)))))',






###############################################################################################################
# MinMaxScaler + Borderline SMOTE Class 2 
###############################################################################################################
'np.subtract(np.subtract(X29, X16), np.add(np.sin(X22), np.subtract(CubeRoot(sqrt(np.tan(np.tan(max(np.multiply(div(sqrt(X19), div(X6, X1)), log2(log10(X20))), sqrt(min(np.subtract(X12, X10), log(X22)))))))), log2(np.subtract(log10(np.subtract(np.multiply(X22, X27), X1)), np.multiply(log(np.multiply(np.tan(sqrt(X1)), np.multiply(div(log(sqrt(X28)), np.cos(X18)), max(CubeRoot(log2(X18)), div(X7, X29))))), div(min(np.multiply(-214.801, X0), div(X11, X28)), X26)))))))',
'np.subtract(np.tan(np.cos(sqrt(np.tan(X19)))), log2(np.add(div(div(div(CubeRoot(X29), np.abs(log2(X28))), np.cos(np.tan(X28))), np.cos(np.tan(X28))), log10(X0))))',
'np.multiply(np.abs(378.273), np.add(np.abs(CubeRoot(log(X28))), log2(np.abs(min(min(sqrt(CubeRoot(X29)), log(log(div(np.cos(np.cos(max(X27, X5))), sqrt(np.add(X15, div(np.subtract(np.tan(X24), log(X0)), X26))))))), X26)))))',
'np.multiply(CubeRoot(min(log2(np.add(CubeRoot(log10(log2(X28))), np.add(div(X28, min(X29, np.sin(166.403))), np.abs(np.multiply(np.cos(X9), np.sin(X24)))))), X28)), -328.641)',
# 'log2(min(log2(np.multiply(np.multiply(sqrt(log10(np.cos(np.cos(np.subtract(X6, X18))))), log2(X28)), div(X12, X29))), min(log2(np.multiply(np.multiply(CubeRoot(X27), log2(X28)), div(X26, X29))), log(np.cos(144.566)))))'
'np.multiply(CubeRoot(min(log2(np.add(CubeRoot(log10(log2(X28))), np.add(div(X28, min(X29, np.sin(166.403))), np.abs(np.multiply(np.cos(X9), np.sin(X24)))))), X28)), -328.641)',



###############################################################################################################
# MinMaxScaler + SMTOE Class 2 
###############################################################################################################
'np.add(np.abs(min(98.625, np.multiply(log(div(X15, log(X28))), np.add(X28, 70.226)))), np.multiply(np.add(X7, 215.244), div(CubeRoot(CubeRoot(X29)), np.subtract(log2(X28), X20))))',
'log2(log(max(div(log(np.add(X28, X29)), np.cos(X1)), log10(max(CubeRoot(CubeRoot(sqrt(CubeRoot(max(log(X16), np.sin(log10(-116.698))))))), div(np.cos(log10(min(log10(np.abs(X29)), log2(max(X28, sqrt(CubeRoot(CubeRoot(np.sin(np.multiply(X0, X0)))))))))), sqrt(log10(np.multiply(X28, X1)))))))))',
'log2(max(div(CubeRoot(X3), 524.675), np.add(np.add(log2(max(log10(X3), np.add(np.add(np.abs(np.multiply(402.017, CubeRoot(log10(X4)))), X26), log2(max(CubeRoot(X23), np.abs(np.add(np.subtract(sqrt(X27), X3), log2(np.subtract(X28, max(np.abs(X28), np.cos(log(np.tan(X29))))))))))))), np.add(log2(max(X12, np.add(log(log2(max(sqrt(X29), np.sin(X17)))), log2(max(max(X24, X23), np.abs(np.add(np.subtract(log2(X27), X3), log2(np.subtract(X28, max(np.abs(X28), np.cos(CubeRoot(X29)))))))))))), sqrt(log2(log(CubeRoot(X28)))))), log2(np.subtract(log(X27), max(X26, np.abs(np.add(log2(np.abs(log10(X28))), log2(np.subtract(X28, max(X29, np.cos(log(X29)))))))))))))',
'np.add(log2(X29), log(sqrt(sqrt(div(np.abs(np.abs(sqrt(np.multiply(333.451, log2(np.abs(X28)))))), div(np.abs(np.multiply(log10(X1), X8)), sqrt(CubeRoot(np.multiply(np.multiply(sqrt(np.tan(min(max(log2(log2(sqrt(X28))), log(log10(X20))), X8))), div(np.subtract(max(np.cos(max(sqrt(X19), np.add(X18, X18))), min(X26, log(X9))), np.tan(log10(np.multiply(X9, X2)))), log(log2(div(log2(log10(np.multiply(X23, X6))), log(np.abs(np.subtract(X3, X5)))))))), log(log10(np.add(np.tan(np.tan(X8)), np.abs(X14)))))))))))))',
'log2(log(np.add(np.sin(div(np.subtract(X16, X14), np.abs(log10(np.multiply(np.subtract(CubeRoot(np.subtract(np.tan(np.multiply(X11, X10)), div(max(X8, X9), log(X28)))), log(log(log(X28)))), log(max(CubeRoot(np.add(sqrt(sqrt(X29)), X28)), X26))))))), np.tan(sqrt(log10(log2(X29)))))))',


###############################################################################################################
# MinMaxScaler + SVMSMOTE Class 2 
###############################################################################################################
'np.multiply(div(-68.315, X29), np.subtract(div(sqrt(log(sqrt(log10(X28)))), sqrt(X27)), np.subtract(np.tan(log2(X0)), log2(np.abs(div(sqrt(X28), np.subtract(X1, 90.150)))))))',
'log(np.add(np.abs(log(min(log10(X29), log(max(X28, CubeRoot(X1)))))), np.add(np.subtract(log(np.multiply(np.cos(np.sin(log(log(div(X29, np.cos(np.cos(sqrt(X12)))))))), sqrt(log(div(-78.758, log2(log(log(div(-78.758, log2(np.add(X4, X28))))))))))), log10(min(log2(X29), np.subtract(log(min(X29, sqrt(X27))), np.subtract(X5, X10))))), np.subtract(X0, X1))))',
'log2(min(div(sqrt(div(log2(log2(X28)), div(X28, 111.095))), log2(np.subtract(np.add(X6, X29), log10(X29)))), div(np.abs(np.tan(log2(CubeRoot(CubeRoot(log10(-53.061)))))), -40.766)))',
'np.subtract(np.subtract(log(div(div(log2(CubeRoot(log(X28))), min(X20, log10(X1))), log(X6))), log2(X12)), max(div(div(log2(X29), log2(X28)), CubeRoot(np.abs(CubeRoot(log2(X28))))), log2(div(np.multiply(np.tan(X6), X29), log(X6)))))',
'div(-107.562, np.abs(div(X29, np.multiply(128.797, log10(max(X12, X28))))))'
]                                                                                                                                                                                                                                                                                                                       
                                                                                                                                                                                                                                                                                                                          
                                                                                                                                                                                                                                                                                                                          
###############################################################################
from sklearn.preprocessing import (StandardScaler,
                                    RobustScaler,
                                    PowerTransformer,
                                    Normalizer,
                                    MaxAbsScaler,
                                    MinMaxScaler)
                                                                                                                                                                                                                                                                                                                          
SS = StandardScaler()
data_final_2_SS = pd.DataFrame(SS.fit_transform(data_final_2), columns = list(data_final_2.columns))
print(data_final_2_SS)

RS = RobustScaler()
data_final_2_RS = pd.DataFrame(RS.fit_transform(data_final_2), columns = list(data_final_2.columns))
print(data_final_2_RS)

PT = PowerTransformer()
data_final_2_PT = pd.DataFrame(PT.fit_transform(data_final_2), columns = list(data_final_2.columns))
print(data_final_2_PT)

Norm = Normalizer()
data_final_2_Norm = pd.DataFrame(Norm.fit_transform(data_final_2), columns = list(data_final_2.columns))
print(data_final_2_Norm)

MAS = MaxAbsScaler()
data_final_2_MAS = pd.DataFrame(MAS.fit_transform(data_final_2), columns = list(data_final_2.columns))
print(data_final_2_MAS)

MMS = MinMaxScaler()
data_final_2_MMS = pd.DataFrame(MMS.fit_transform(data_final_2), columns = list(data_final_2.columns))
print(data_final_2_MMS)

                                                                                                                                                                                                                                               
def replace_variable(match):
    variable_name = match.group(0)
    # print(variable_name)
    variable_index = int(re.search(r'\d+', variable_name).group())
    return f'data_final_2.loc[i][{variable_index}]'

def replace_variable_SS(match):
    variable_name = match.group(0)
    print("SHIT")
    print(variable_name)
    variable_index = int(re.search(r'\d+', variable_name).group())
    return f'data_final_2_SS.loc[i][{variable_index}]'

def replace_variable_RS(match):
    variable_name = match.group(0)
    variable_index = int(re.search(r'\d+', variable_name).group())
    return f'data_final_2_RS.loc[i][{variable_index}]'

def replace_variable_PT(match):
    variable_name = match.group(0)
    variable_index = int(re.search(r'\d+', variable_name).group())
    return f'data_final_2_PT.loc[i][{variable_index}]'

def replace_variable_Norm(match):
    variable_name = match.group(0)
    variable_index = int(re.search(r'\d+', variable_name).group())
    return f'data_final_2_Norm.loc[i][{variable_index}]'


def replace_variable_MAS(match):
    variable_name = match.group(0)
    variable_index = int(re.search(r'\d+', variable_name).group())
    return f'data_final_2_MAS.loc[i][{variable_index}]'


def replace_variable_MMS(match):
    variable_name = match.group(0)
    variable_index = int(re.search(r'\d+', variable_name).group())
    return f'data_final_2_MMS.loc[i][{variable_index}]'

# Create a regular expression pattern to match variable names
pattern = re.compile(r'X\d+')
# patternSS = re.compile(r'X\d+')
# Perform the variable replacement using re.sub with the callback function
# result = pattern.sub(replace_variable, text)

# print(result)
variable_mapping = {f'X{i}': f'data_final_2.loc[i][{i}]' for i in range(30)}
variable_mapping_SS = {f'X{i}': f'data_final_2_SS.loc[i][{i}]' for i in range(30)}
variable_mapping_RS = {f'X{i}': f'data_final_2.loc[i][{i}]' for i in range(30)}
variable_mapping_PT = {f'X{i}': f'data_final_2.loc[i][{i}]' for i in range(30)}
variable_mapping_Norm = {f'X{i}': f'data_final_2.loc[i][{i}]' for i in range(30)}
variable_mapping_MAS = {f'X{i}': f'data_final_2.loc[i][{i}]' for i in range(30)}
variable_mapping_MMS = {f'X{i}': f'data_final_2.loc[i][{i}]' for i in range(30)}
# print(variable_mapping)
for i in range(len(Original_all)):
    Original_all[i] = pattern.sub(replace_variable, Original_all[i])
    # print(Original_all[i])
for i in range(len(StandardScaler_raw)):
    StandardScaler_raw[i] = pattern.sub(replace_variable_SS, StandardScaler_raw[i])
for i in range(len(RobustScaler_raw)):
    RobustScaler_raw[i] = pattern.sub(replace_variable_RS, RobustScaler_raw[i])
for i in range(len(PowerTransformer_raw)):
    PowerTransformer_raw[i] = pattern.sub(replace_variable_PT, PowerTransformer_raw[i])
for i in range(len(Normalizer_raw)): 
    Normalizer_raw[i] = pattern.sub(replace_variable_Norm, Normalizer_raw[i])
for i in range(len(MaxAbsScaler_Raw)):
    MaxAbsScaler_Raw[i] = pattern.sub(replace_variable_MAS, MaxAbsScaler_Raw[i])
for i in range(len(MinMaxScaler_raw)):
    MinMaxScaler_raw[i] = pattern.sub(replace_variable_MMS, MinMaxScaler_raw[i])
def Sigmoid(x):
    return round(1/(1+np.exp(-x)),0)
AllEquations = Original_all + StandardScaler_raw + RobustScaler_raw + PowerTransformer_raw + \
    Normalizer_raw + MaxAbsScaler_Raw + MinMaxScaler_raw
y_pred = [[] for i in range(len(AllEquations))]
Final_pred = [[] for i in range(len(AllEquations))]
# for j in range(len(Original_all)):
for i in range(len(data_final_2)):
    res = [Sigmoid(eval(AllEquations[j])) for j in range(len(AllEquations))]
    # print(res)
    final_res = sum(res)
    for z in range(len(AllEquations)):
        if final_res >= z: 
            Final_pred[z].append(1.0)
        else:
            Final_pred[z].append(0.0)
    # print(Final_pred)
    print("Fuck you motherfucker")
    for k in range(len(res)):
        y_pred[k].append(res[k])

from sklearn.metrics import (accuracy_score,
                              roc_auc_score,
                              precision_score,
                              recall_score,
                              f1_score) 

Accuracy = [accuracy_score(y_real_2,Final_pred[i]) for i in range(len(Final_pred))]
AUC = [roc_auc_score(y_real_2, Final_pred[i]) for i in range(len(Final_pred))]
Precision = [precision_score(y_real_2,Final_pred[i]) for i in range(len(Final_pred))] 
Recall = [recall_score(y_real_2,Final_pred[i]) for i in range(len(Final_pred))]
F1_score = [f1_score(y_real_2,Final_pred[i]) for i in range(len(Final_pred))]

import matplotlib.pyplot as plt 
plt.figure(figsize=(12,8))
plt.plot([i for i in range(len(Accuracy))], Accuracy, color='red', label = "Accuracy")
plt.plot([i for i in range(len(AUC))], AUC, color='blue', label = "Accuracy")
plt.plot([i for i in range(len(Precision))], Precision, color='green', label="Precision")
plt.plot([i for i in range(len(Recall))], Recall, color='orange', label="Recall")
plt.plot([i for i in range(len(F1_score))], F1_score, color='yellow', label = "F1_Score")
plt.grid(True)
plt.legend()
plt.xticks(range(0,len(Final_pred)))

        
AllResults = pd.concat([pd.DataFrame(np.array(Accuracy), columns = ["Accuracy"]),
pd.DataFrame(np.array(AUC), columns = ["AUC"]),
pd.DataFrame(np.array(Precision), columns = ["Precision"]),
pd.DataFrame(np.array(Recall), columns = ["Recall"]),
pd.DataFrame(np.array(F1_score), columns = ["F1_score"])],axis=1)    

AllResults.to_csv("AllResults_class_2.csv",index=False)

pd.DataFrame(Final_pred).transpose().to_csv("FinalRES_class_2.csv",index=False)




